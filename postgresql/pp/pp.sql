


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: Usuario                                                                                                //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.Usuario

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.Usuario CASCADE;

CREATE TABLE massoftware.Usuario
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº usuario
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT Usuario_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_Usuario_nombre ON massoftware.Usuario (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatUsuario() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatUsuario() RETURNS TRIGGER AS $formatUsuario$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);

	RETURN NEW;
END;
$formatUsuario$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatUsuario ON massoftware.Usuario CASCADE;

CREATE TRIGGER tgFormatUsuario BEFORE INSERT OR UPDATE
	ON massoftware.Usuario FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatUsuario();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.Usuario;

-- SELECT * FROM massoftware.Usuario LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.Usuario;

-- SELECT * FROM massoftware.Usuario WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_UsuarioById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_UsuarioById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.Usuario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Usuario.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.Usuario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Usuario.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Usuario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Usuario.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_UsuarioById('xxx');

-- SELECT * FROM massoftware.d_UsuarioById((SELECT Usuario.id FROM massoftware.Usuario LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_Usuario(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_Usuario(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.Usuario(id, numero, nombre) VALUES (idArg, numeroArg, nombreArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.Usuario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Usuario.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_Usuario(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_Usuario(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_Usuario(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.Usuario SET 
		  numero = numeroArg
		, nombre = nombreArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Usuario.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Usuario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Usuario.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_Usuario(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Usuario_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Usuario_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Usuario
	WHERE	(numeroArg IS NULL OR Usuario.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Usuario_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Usuario_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Usuario_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Usuario
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Usuario.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Usuario_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Usuario_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Usuario_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.Usuario;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Usuario_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_UsuarioById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_UsuarioById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Usuario.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_UsuarioById('xxx');

-- SELECT * FROM massoftware.f_UsuarioById((SELECT Usuario.id FROM massoftware.Usuario LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario(
		 null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario(
		100
		, 0
		, null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario_asc_Usuario_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario_asc_Usuario_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario_asc_Usuario_Numero(
		100
		, 0
		, null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario_des_Usuario_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario_des_Usuario_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario_des_Usuario_Numero(
		100
		, 0
		, null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario_asc_Usuario_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario_asc_Usuario_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario_asc_Usuario_Numero(
		 null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario_des_Usuario_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario_des_Usuario_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario_des_Usuario_Numero(
		 null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario_asc_Usuario_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario_asc_Usuario_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario_asc_Usuario_Nombre(
		100
		, 0
		, null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario_des_Usuario_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario_des_Usuario_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario_des_Usuario_Nombre(
		100
		, 0
		, null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario_asc_Usuario_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario_asc_Usuario_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario_asc_Usuario_Nombre(
		 null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Usuario_des_Usuario_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Usuario_des_Usuario_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Usuario_id VARCHAR(36)   	-- 0
		,Usuario_numero INTEGER   	-- 1
		,Usuario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Usuario.id AS Usuario_id       	-- 0
		,Usuario.numero AS Usuario_numero	-- 1
		,Usuario.nombre AS Usuario_nombre	-- 2

	FROM	massoftware.Usuario

	WHERE	(numeroFromArg0 IS NULL OR Usuario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Usuario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Usuario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Usuario.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Usuario_des_Usuario_Nombre(
		 null::INTEGER -- Usuario_numeroFromArg0
		, null::INTEGER -- Usuario_numeroToArg1
		, null::VARCHAR -- Usuario_nombreWord0Arg2
		, null::VARCHAR -- Usuario_nombreWord1Arg3
		, null::VARCHAR -- Usuario_nombreWord2Arg4
		, null::VARCHAR -- Usuario_nombreWord3Arg5
		, null::VARCHAR -- Usuario_nombreWord4Arg6
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: Zona                                                                                                   //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.Zona

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.Zona CASCADE;

CREATE TABLE massoftware.Zona
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Código
	codigo VARCHAR(3) NOT NULL, 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- Bonificación
	bonificacion DECIMAL(13, 5) CONSTRAINT Zona_bonificacion_chk CHECK ( bonificacion >= 0 AND bonificacion <= 99999.9999  ), 
	
	-- Recargo
	recargo DECIMAL(13, 5) CONSTRAINT Zona_recargo_chk CHECK ( recargo >= 0 AND recargo <= 99999.9999  )
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_Zona_codigo ON massoftware.Zona (TRANSLATE(LOWER(TRIM(codigo))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

CREATE UNIQUE INDEX u_Zona_nombre ON massoftware.Zona (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatZona() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatZona() RETURNS TRIGGER AS $formatZona$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.codigo := massoftware.white_is_null(NEW.codigo);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);

	RETURN NEW;
END;
$formatZona$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatZona ON massoftware.Zona CASCADE;

CREATE TRIGGER tgFormatZona BEFORE INSERT OR UPDATE
	ON massoftware.Zona FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatZona();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.Zona;

-- SELECT * FROM massoftware.Zona LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.Zona;

-- SELECT * FROM massoftware.Zona WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_ZonaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_ZonaById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.Zona WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Zona.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.Zona WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Zona.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Zona WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Zona.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_ZonaById('xxx');

-- SELECT * FROM massoftware.d_ZonaById((SELECT Zona.id FROM massoftware.Zona LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_Zona(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(3)
		, nombreArg VARCHAR(50)
		, bonificacionArg DECIMAL
		, recargoArg DECIMAL
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_Zona(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(3)
		, nombreArg VARCHAR(50)
		, bonificacionArg DECIMAL
		, recargoArg DECIMAL
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.Zona(id, codigo, nombre, bonificacion, recargo) VALUES (idArg, codigoArg, nombreArg, bonificacionArg, recargoArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.Zona WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Zona.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_Zona(
		null::VARCHAR(36)
		, null::VARCHAR
		, null::VARCHAR
		, null::DECIMAL
		, null::DECIMAL
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_Zona(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(3)
		, nombreArg VARCHAR(50)
		, bonificacionArg DECIMAL
		, recargoArg DECIMAL
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_Zona(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(3)
		, nombreArg VARCHAR(50)
		, bonificacionArg DECIMAL
		, recargoArg DECIMAL
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.Zona SET 
		  codigo = codigoArg
		, nombre = nombreArg
		, bonificacion = bonificacionArg
		, recargo = recargoArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Zona.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Zona WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Zona.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_Zona(
		null::VARCHAR(36)
		, null::VARCHAR
		, null::VARCHAR
		, null::DECIMAL
		, null::DECIMAL
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Zona_codigo(codigoArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Zona_codigo(codigoArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Zona
	WHERE	(codigoArg IS NULL OR (CHAR_LENGTH(TRIM(codigoArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Zona.codigo)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(codigoArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Zona_codigo(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Zona_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Zona_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Zona
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Zona.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Zona_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Zona_bonificacion() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Zona_bonificacion() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(bonificacion),0) + 1)::DECIMAL
	FROM	massoftware.Zona;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Zona_bonificacion();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Zona_recargo() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Zona_recargo() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(recargo),0) + 1)::DECIMAL
	FROM	massoftware.Zona;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Zona_recargo();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ZonaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ZonaById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Zona.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_ZonaById('xxx');

-- SELECT * FROM massoftware.f_ZonaById((SELECT Zona.id FROM massoftware.Zona LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_asc_Zona_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_asc_Zona_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.codigo ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_asc_Zona_Codigo(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_des_Zona_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_des_Zona_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.codigo DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_des_Zona_Codigo(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_asc_Zona_Codigo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_asc_Zona_Codigo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.codigo ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_asc_Zona_Codigo(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_des_Zona_Codigo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_des_Zona_Codigo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.codigo DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_des_Zona_Codigo(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_asc_Zona_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_asc_Zona_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_asc_Zona_Nombre(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_des_Zona_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_des_Zona_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_des_Zona_Nombre(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_asc_Zona_Nombre(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_asc_Zona_Nombre(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_asc_Zona_Nombre(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_des_Zona_Nombre(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_des_Zona_Nombre(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_des_Zona_Nombre(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_asc_Zona_Bonificacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_asc_Zona_Bonificacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.bonificacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_asc_Zona_Bonificacion(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_des_Zona_Bonificacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_des_Zona_Bonificacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.bonificacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_des_Zona_Bonificacion(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_asc_Zona_Bonificacion(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_asc_Zona_Bonificacion(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.bonificacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_asc_Zona_Bonificacion(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_des_Zona_Bonificacion(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_des_Zona_Bonificacion(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.bonificacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_des_Zona_Bonificacion(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_asc_Zona_Recargo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_asc_Zona_Recargo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.recargo ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_asc_Zona_Recargo(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_des_Zona_Recargo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_des_Zona_Recargo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.recargo DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_des_Zona_Recargo(
		100
		, 0
		, null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_asc_Zona_Recargo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_asc_Zona_Recargo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.recargo ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_asc_Zona_Recargo(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Zona_des_Zona_Recargo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Zona_des_Zona_Recargo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 Zona_id VARCHAR(36)            	-- 0
		,Zona_codigo VARCHAR(3)         	-- 1
		,Zona_nombre VARCHAR(50)        	-- 2
		,Zona_bonificacion DECIMAL(13, 5)	-- 3
		,Zona_recargo DECIMAL(13, 5)    	-- 4
	) AS $$

	SELECT
		 Zona.id AS Zona_id                   	-- 0
		,Zona.codigo AS Zona_codigo           	-- 1
		,Zona.nombre AS Zona_nombre           	-- 2
		,Zona.bonificacion AS Zona_bonificacion	-- 3
		,Zona.recargo AS Zona_recargo         	-- 4

	FROM	massoftware.Zona

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(Zona.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Zona.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY Zona.recargo DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Zona_des_Zona_Recargo(
		 null::VARCHAR -- Zona_codigoArg0
		, null::VARCHAR -- Zona_nombreWord0Arg1
		, null::VARCHAR -- Zona_nombreWord1Arg2
		, null::VARCHAR -- Zona_nombreWord2Arg3
		, null::VARCHAR -- Zona_nombreWord3Arg4
		, null::VARCHAR -- Zona_nombreWord4Arg5
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: Pais                                                                                                   //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.Pais

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.Pais CASCADE;

CREATE TABLE massoftware.Pais
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº país
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT Pais_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- Abreviatura
	abreviatura VARCHAR(5) NOT NULL
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_Pais_nombre ON massoftware.Pais (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

CREATE UNIQUE INDEX u_Pais_abreviatura ON massoftware.Pais (TRANSLATE(LOWER(TRIM(abreviatura))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatPais() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatPais() RETURNS TRIGGER AS $formatPais$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);
	 NEW.abreviatura := massoftware.white_is_null(NEW.abreviatura);

	RETURN NEW;
END;
$formatPais$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatPais ON massoftware.Pais CASCADE;

CREATE TRIGGER tgFormatPais BEFORE INSERT OR UPDATE
	ON massoftware.Pais FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatPais();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.Pais;

-- SELECT * FROM massoftware.Pais LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.Pais;

-- SELECT * FROM massoftware.Pais WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_PaisById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_PaisById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.Pais WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Pais.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.Pais WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Pais.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Pais WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Pais.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_PaisById('xxx');

-- SELECT * FROM massoftware.d_PaisById((SELECT Pais.id FROM massoftware.Pais LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_Pais(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_Pais(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.Pais(id, numero, nombre, abreviatura) VALUES (idArg, numeroArg, nombreArg, abreviaturaArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.Pais WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Pais.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_Pais(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_Pais(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_Pais(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.Pais SET 
		  numero = numeroArg
		, nombre = nombreArg
		, abreviatura = abreviaturaArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Pais.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Pais WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Pais.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_Pais(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Pais_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Pais_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Pais
	WHERE	(numeroArg IS NULL OR Pais.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Pais_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Pais_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Pais_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Pais
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Pais.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Pais_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Pais_abreviatura(abreviaturaArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Pais_abreviatura(abreviaturaArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Pais
	WHERE	(abreviaturaArg IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Pais.abreviatura)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(abreviaturaArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Pais_abreviatura(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Pais_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Pais_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.Pais;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Pais_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_PaisById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_PaisById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Pais.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_PaisById('xxx');

-- SELECT * FROM massoftware.f_PaisById((SELECT Pais.id FROM massoftware.Pais LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais(
		 null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais(
		100
		, 0
		, null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_asc_Pais_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_asc_Pais_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_asc_Pais_Numero(
		100
		, 0
		, null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_des_Pais_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_des_Pais_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_des_Pais_Numero(
		100
		, 0
		, null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_asc_Pais_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_asc_Pais_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_asc_Pais_Numero(
		 null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_des_Pais_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_des_Pais_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_des_Pais_Numero(
		 null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_asc_Pais_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_asc_Pais_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_asc_Pais_Nombre(
		100
		, 0
		, null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_des_Pais_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_des_Pais_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_des_Pais_Nombre(
		100
		, 0
		, null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_asc_Pais_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_asc_Pais_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_asc_Pais_Nombre(
		 null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_des_Pais_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_des_Pais_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_des_Pais_Nombre(
		 null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_asc_Pais_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_asc_Pais_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.abreviatura ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_asc_Pais_Abreviatura(
		100
		, 0
		, null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_des_Pais_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_des_Pais_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.abreviatura DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_des_Pais_Abreviatura(
		100
		, 0
		, null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_asc_Pais_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_asc_Pais_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.abreviatura ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_asc_Pais_Abreviatura(
		 null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Pais_des_Pais_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Pais_des_Pais_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Pais_id VARCHAR(36)       	-- 0
		,Pais_numero INTEGER       	-- 1
		,Pais_nombre VARCHAR(50)   	-- 2
		,Pais_abreviatura VARCHAR(5)	-- 3
	) AS $$

	SELECT
		 Pais.id AS Pais_id                 	-- 0
		,Pais.numero AS Pais_numero         	-- 1
		,Pais.nombre AS Pais_nombre         	-- 2
		,Pais.abreviatura AS Pais_abreviatura	-- 3

	FROM	massoftware.Pais

	WHERE	(numeroFromArg0 IS NULL OR Pais.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Pais.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Pais.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Pais.abreviatura DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Pais_des_Pais_Abreviatura(
		 null::INTEGER -- Pais_numeroFromArg0
		, null::INTEGER -- Pais_numeroToArg1
		, null::VARCHAR -- Pais_nombreWord0Arg2
		, null::VARCHAR -- Pais_nombreWord1Arg3
		, null::VARCHAR -- Pais_nombreWord2Arg4
		, null::VARCHAR -- Pais_nombreWord3Arg5
		, null::VARCHAR -- Pais_nombreWord4Arg6
		, null::VARCHAR -- Pais_abreviaturaWord0Arg7
		, null::VARCHAR -- Pais_abreviaturaWord1Arg8
		, null::VARCHAR -- Pais_abreviaturaWord2Arg9
		, null::VARCHAR -- Pais_abreviaturaWord3Arg10
		, null::VARCHAR -- Pais_abreviaturaWord4Arg11
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: Provincia                                                                                              //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.Provincia

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.Provincia CASCADE;

CREATE TABLE massoftware.Provincia
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº provincia
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT Provincia_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- Abreviatura
	abreviatura VARCHAR(5) NOT NULL, 
	
	-- Nº provincia AFIP
	numeroAFIP INTEGER CONSTRAINT Provincia_numeroAFIP_chk CHECK ( numeroAFIP >= 1  ), 
	
	-- Nº provincia ingresos brutos
	numeroIngresosBrutos INTEGER CONSTRAINT Provincia_numeroIngresosBrutos_chk CHECK ( numeroIngresosBrutos >= 1  ), 
	
	-- Nº provincia RENATEA
	numeroRENATEA INTEGER CONSTRAINT Provincia_numeroRENATEA_chk CHECK ( numeroRENATEA >= 1  ), 
	
	-- País
	pais VARCHAR(36)  NOT NULL  REFERENCES massoftware.Pais (id)
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_Provincia_nombre ON massoftware.Provincia (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

CREATE UNIQUE INDEX u_Provincia_abreviatura ON massoftware.Provincia (TRANSLATE(LOWER(TRIM(abreviatura))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatProvincia() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatProvincia() RETURNS TRIGGER AS $formatProvincia$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);
	 NEW.abreviatura := massoftware.white_is_null(NEW.abreviatura);
	 NEW.pais := massoftware.white_is_null(NEW.pais);

	RETURN NEW;
END;
$formatProvincia$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatProvincia ON massoftware.Provincia CASCADE;

CREATE TRIGGER tgFormatProvincia BEFORE INSERT OR UPDATE
	ON massoftware.Provincia FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatProvincia();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.Provincia;

-- SELECT * FROM massoftware.Provincia LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.Provincia;

-- SELECT * FROM massoftware.Provincia WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_ProvinciaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_ProvinciaById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.Provincia WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Provincia.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.Provincia WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Provincia.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Provincia WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Provincia.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_ProvinciaById('xxx');

-- SELECT * FROM massoftware.d_ProvinciaById((SELECT Provincia.id FROM massoftware.Provincia LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_Provincia(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
		, numeroAFIPArg INTEGER
		, numeroIngresosBrutosArg INTEGER
		, numeroRENATEAArg INTEGER
		, paisArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_Provincia(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
		, numeroAFIPArg INTEGER
		, numeroIngresosBrutosArg INTEGER
		, numeroRENATEAArg INTEGER
		, paisArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.Provincia(id, numero, nombre, abreviatura, numeroAFIP, numeroIngresosBrutos, numeroRENATEA, pais) VALUES (idArg, numeroArg, nombreArg, abreviaturaArg, numeroAFIPArg, numeroIngresosBrutosArg, numeroRENATEAArg, paisArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.Provincia WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Provincia.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_Provincia(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
		, null::INTEGER
		, null::INTEGER
		, null::INTEGER
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_Provincia(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
		, numeroAFIPArg INTEGER
		, numeroIngresosBrutosArg INTEGER
		, numeroRENATEAArg INTEGER
		, paisArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_Provincia(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
		, numeroAFIPArg INTEGER
		, numeroIngresosBrutosArg INTEGER
		, numeroRENATEAArg INTEGER
		, paisArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.Provincia SET 
		  numero = numeroArg
		, nombre = nombreArg
		, abreviatura = abreviaturaArg
		, numeroAFIP = numeroAFIPArg
		, numeroIngresosBrutos = numeroIngresosBrutosArg
		, numeroRENATEA = numeroRENATEAArg
		, pais = paisArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Provincia.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Provincia WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Provincia.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_Provincia(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
		, null::INTEGER
		, null::INTEGER
		, null::INTEGER
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Provincia_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Provincia_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Provincia
	WHERE	(numeroArg IS NULL OR Provincia.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Provincia_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Provincia_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Provincia_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Provincia
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Provincia.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Provincia_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Provincia_abreviatura(abreviaturaArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Provincia_abreviatura(abreviaturaArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Provincia
	WHERE	(abreviaturaArg IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Provincia.abreviatura)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(abreviaturaArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Provincia_abreviatura(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Provincia_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Provincia_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.Provincia;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Provincia_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Provincia_numeroAFIP() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Provincia_numeroAFIP() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numeroAFIP),0) + 1)::INTEGER
	FROM	massoftware.Provincia;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Provincia_numeroAFIP();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Provincia_numeroIngresosBrutos() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Provincia_numeroIngresosBrutos() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numeroIngresosBrutos),0) + 1)::INTEGER
	FROM	massoftware.Provincia;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Provincia_numeroIngresosBrutos();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Provincia_numeroRENATEA() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Provincia_numeroRENATEA() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numeroRENATEA),0) + 1)::INTEGER
	FROM	massoftware.Provincia;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Provincia_numeroRENATEA();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ProvinciaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ProvinciaById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Provincia.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_ProvinciaById('xxx');

-- SELECT * FROM massoftware.f_ProvinciaById((SELECT Provincia.id FROM massoftware.Provincia LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ProvinciaById_1(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ProvinciaById_1(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Provincia.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_ProvinciaById_1('xxx');

-- SELECT * FROM massoftware.f_ProvinciaById_1((SELECT Provincia.id FROM massoftware.Provincia LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Numero(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Numero(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Numero(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Numero(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Nombre(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Nombre(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Nombre(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Nombre(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.abreviatura ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Abreviatura(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.abreviatura DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Abreviatura(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.abreviatura ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Abreviatura(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.abreviatura DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Abreviatura(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroAFIP ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroAFIP(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroAFIP DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroAFIP(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroAFIP ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroAFIP(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroAFIP DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroAFIP(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroIngresosBrutos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroIngresosBrutos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroIngresosBrutos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroIngresosBrutos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroRENATEA(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroRENATEA(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroRENATEA ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroRENATEA(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroRENATEA(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroRENATEA(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroRENATEA DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroRENATEA(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroRENATEA(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroRENATEA(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroRENATEA ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroRENATEA(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroRENATEA(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroRENATEA(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroRENATEA DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroRENATEA(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Pais(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Pais(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.pais ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Pais(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Pais(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Pais(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.pais DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Pais(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Pais(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Pais(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.pais ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Pais(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Pais(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Pais(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6

	FROM	massoftware.Provincia

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.pais DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Pais(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Numero_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Numero_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Numero_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Numero_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Nombre_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Nombre_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Nombre_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Nombre_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Abreviatura_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Abreviatura_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.abreviatura ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Abreviatura_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Abreviatura_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Abreviatura_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.abreviatura DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Abreviatura_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Abreviatura_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Abreviatura_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.abreviatura ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Abreviatura_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Abreviatura_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Abreviatura_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.abreviatura DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Abreviatura_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroAFIP ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroAFIP_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroAFIP DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroAFIP_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroAFIP ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroAFIP_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroAFIP DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroAFIP_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroIngresosBrutos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroIngresosBrutos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroIngresosBrutos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroIngresosBrutos_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroIngresosBrutos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroIngresosBrutos_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroRENATEA_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroRENATEA_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroRENATEA ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroRENATEA_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroRENATEA_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroRENATEA_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroRENATEA DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroRENATEA_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_NumeroRENATEA_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_NumeroRENATEA_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroRENATEA ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_NumeroRENATEA_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_NumeroRENATEA_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_NumeroRENATEA_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.numeroRENATEA DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_NumeroRENATEA_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Pais_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Pais_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.pais ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Pais_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Pais_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Pais_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.pais DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Pais_1(
		100
		, 0
		, null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_asc_Provincia_Pais_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_asc_Provincia_Pais_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.pais ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_asc_Provincia_Pais_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Provincia_des_Provincia_Pais_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Provincia_des_Provincia_Pais_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
		, paisArg12 VARCHAR(36)
) RETURNS

	TABLE(
		 Provincia_id VARCHAR(36)             	-- 0
		,Provincia_numero INTEGER             	-- 1
		,Provincia_nombre VARCHAR(50)         	-- 2
		,Provincia_abreviatura VARCHAR(5)     	-- 3
		,Provincia_numeroAFIP INTEGER         	-- 4
		,Provincia_numeroIngresosBrutos INTEGER	-- 5
		,Provincia_numeroRENATEA INTEGER      	-- 6
		,Pais_id VARCHAR(36)                  	-- 7
		,Pais_numero INTEGER                  	-- 8
		,Pais_nombre VARCHAR(50)              	-- 9
		,Pais_abreviatura VARCHAR(5)          	-- 10
	) AS $$

	SELECT
		 Provincia.id AS Provincia_id                                   	-- 0
		,Provincia.numero AS Provincia_numero                           	-- 1
		,Provincia.nombre AS Provincia_nombre                           	-- 2
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 3
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 4
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 5
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 6
		,Pais.id AS Pais_id                                             	-- 7
		,Pais.numero AS Pais_numero                                     	-- 8
		,Pais.nombre AS Pais_nombre                                     	-- 9
		,Pais.abreviatura AS Pais_abreviatura                           	-- 10

	FROM	massoftware.Provincia
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Provincia.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Provincia.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Provincia.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))
		 AND (paisArg12 IS NULL OR (CHAR_LENGTH(TRIM(paisArg12)) > 0 AND Provincia.pais = TRIM(paisArg12)::VARCHAR))

	ORDER BY Provincia.pais DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Provincia_des_Provincia_Pais_1(
		 null::INTEGER -- Provincia_numeroFromArg0
		, null::INTEGER -- Provincia_numeroToArg1
		, null::VARCHAR -- Provincia_nombreWord0Arg2
		, null::VARCHAR -- Provincia_nombreWord1Arg3
		, null::VARCHAR -- Provincia_nombreWord2Arg4
		, null::VARCHAR -- Provincia_nombreWord3Arg5
		, null::VARCHAR -- Provincia_nombreWord4Arg6
		, null::VARCHAR -- Provincia_abreviaturaWord0Arg7
		, null::VARCHAR -- Provincia_abreviaturaWord1Arg8
		, null::VARCHAR -- Provincia_abreviaturaWord2Arg9
		, null::VARCHAR -- Provincia_abreviaturaWord3Arg10
		, null::VARCHAR -- Provincia_abreviaturaWord4Arg11
		, null::VARCHAR -- Provincia_paisArg12
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: Ciudad                                                                                                 //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.Ciudad

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.Ciudad CASCADE;

CREATE TABLE massoftware.Ciudad
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº ciudad
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT Ciudad_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- Departamento
	departamento VARCHAR(50), 
	
	-- Nº provincia AFIP
	numeroAFIP INTEGER CONSTRAINT Ciudad_numeroAFIP_chk CHECK ( numeroAFIP >= 1  ), 
	
	-- Provincia
	provincia VARCHAR(36)  NOT NULL  REFERENCES massoftware.Provincia (id)
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_Ciudad_nombre ON massoftware.Ciudad (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatCiudad() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatCiudad() RETURNS TRIGGER AS $formatCiudad$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);
	 NEW.departamento := massoftware.white_is_null(NEW.departamento);
	 NEW.provincia := massoftware.white_is_null(NEW.provincia);

	RETURN NEW;
END;
$formatCiudad$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatCiudad ON massoftware.Ciudad CASCADE;

CREATE TRIGGER tgFormatCiudad BEFORE INSERT OR UPDATE
	ON massoftware.Ciudad FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatCiudad();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.Ciudad;

-- SELECT * FROM massoftware.Ciudad LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.Ciudad;

-- SELECT * FROM massoftware.Ciudad WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_CiudadById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_CiudadById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.Ciudad WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.Ciudad WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Ciudad WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_CiudadById('xxx');

-- SELECT * FROM massoftware.d_CiudadById((SELECT Ciudad.id FROM massoftware.Ciudad LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_Ciudad(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, departamentoArg VARCHAR(50)
		, numeroAFIPArg INTEGER
		, provinciaArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_Ciudad(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, departamentoArg VARCHAR(50)
		, numeroAFIPArg INTEGER
		, provinciaArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.Ciudad(id, numero, nombre, departamento, numeroAFIP, provincia) VALUES (idArg, numeroArg, nombreArg, departamentoArg, numeroAFIPArg, provinciaArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.Ciudad WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_Ciudad(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
		, null::INTEGER
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_Ciudad(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, departamentoArg VARCHAR(50)
		, numeroAFIPArg INTEGER
		, provinciaArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_Ciudad(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, departamentoArg VARCHAR(50)
		, numeroAFIPArg INTEGER
		, provinciaArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.Ciudad SET 
		  numero = numeroArg
		, nombre = nombreArg
		, departamento = departamentoArg
		, numeroAFIP = numeroAFIPArg
		, provincia = provinciaArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Ciudad WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_Ciudad(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
		, null::INTEGER
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Ciudad_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Ciudad_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Ciudad
	WHERE	(numeroArg IS NULL OR Ciudad.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Ciudad_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Ciudad_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Ciudad_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Ciudad
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Ciudad.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Ciudad_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Ciudad_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Ciudad_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.Ciudad;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Ciudad_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Ciudad_numeroAFIP() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Ciudad_numeroAFIP() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numeroAFIP),0) + 1)::INTEGER
	FROM	massoftware.Ciudad;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Ciudad_numeroAFIP();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CiudadById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CiudadById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CiudadById('xxx');

-- SELECT * FROM massoftware.f_CiudadById((SELECT Ciudad.id FROM massoftware.Ciudad LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CiudadById_1(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CiudadById_1(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CiudadById_1('xxx');

-- SELECT * FROM massoftware.f_CiudadById_1((SELECT Ciudad.id FROM massoftware.Ciudad LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CiudadById_2(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CiudadById_2(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Ciudad.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CiudadById_2('xxx');

-- SELECT * FROM massoftware.f_CiudadById_2((SELECT Ciudad.id FROM massoftware.Ciudad LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Numero(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Numero(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Numero(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Numero(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Nombre(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Nombre(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Nombre(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Nombre(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Departamento(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Departamento(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Departamento(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Departamento(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Departamento(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Departamento(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Departamento(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Departamento(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Departamento(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Departamento(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Departamento(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Departamento(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_NumeroAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_NumeroAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_NumeroAFIP(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_NumeroAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_NumeroAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_NumeroAFIP(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Provincia(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Provincia(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Provincia(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Provincia(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Provincia(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Provincia(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Provincia(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Provincia(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Provincia(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Provincia(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Provincia(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)         	-- 0
		,Ciudad_numero INTEGER         	-- 1
		,Ciudad_nombre VARCHAR(50)     	-- 2
		,Ciudad_departamento VARCHAR(50)	-- 3
		,Ciudad_numeroAFIP INTEGER     	-- 4
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                   	-- 0
		,Ciudad.numero AS Ciudad_numero           	-- 1
		,Ciudad.nombre AS Ciudad_nombre           	-- 2
		,Ciudad.departamento AS Ciudad_departamento	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP   	-- 4

	FROM	massoftware.Ciudad

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Provincia(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Numero_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Numero_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Numero_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Numero_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Nombre_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Nombre_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Nombre_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Nombre_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Departamento_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Departamento_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Departamento_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Departamento_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Departamento_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Departamento_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Departamento_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Departamento_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Departamento_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Departamento_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Departamento_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Departamento_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Provincia_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Provincia_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Provincia_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Provincia_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Provincia_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Provincia_1(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Provincia_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Provincia_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Provincia_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Provincia_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Provincia_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Provincia_1(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Numero_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Numero_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Numero_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Numero_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Nombre_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Nombre_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Nombre_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Nombre_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Departamento_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Departamento_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Departamento_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Departamento_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Departamento_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Departamento_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Departamento_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Departamento_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Departamento_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Departamento_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Departamento_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.departamento DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Departamento_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_NumeroAFIP_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.numeroAFIP DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_NumeroAFIP_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Provincia_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Provincia_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Provincia_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Provincia_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Provincia_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Provincia_2(
		100
		, 0
		, null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_asc_Ciudad_Provincia_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_asc_Ciudad_Provincia_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_asc_Ciudad_Provincia_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Ciudad_des_Ciudad_Provincia_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Ciudad_des_Ciudad_Provincia_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, provinciaArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 Ciudad_id VARCHAR(36)                	-- 0
		,Ciudad_numero INTEGER                	-- 1
		,Ciudad_nombre VARCHAR(50)            	-- 2
		,Ciudad_departamento VARCHAR(50)      	-- 3
		,Ciudad_numeroAFIP INTEGER            	-- 4
		,Provincia_id VARCHAR(36)             	-- 5
		,Provincia_numero INTEGER             	-- 6
		,Provincia_nombre VARCHAR(50)         	-- 7
		,Provincia_abreviatura VARCHAR(5)     	-- 8
		,Provincia_numeroAFIP INTEGER         	-- 9
		,Provincia_numeroIngresosBrutos INTEGER	-- 10
		,Provincia_numeroRENATEA INTEGER      	-- 11
		,Pais_id VARCHAR(36)                  	-- 12
		,Pais_numero INTEGER                  	-- 13
		,Pais_nombre VARCHAR(50)              	-- 14
		,Pais_abreviatura VARCHAR(5)          	-- 15
	) AS $$

	SELECT
		 Ciudad.id AS Ciudad_id                                         	-- 0
		,Ciudad.numero AS Ciudad_numero                                 	-- 1
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 2
		,Ciudad.departamento AS Ciudad_departamento                     	-- 3
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 4
		,Provincia.id AS Provincia_id                                   	-- 5
		,Provincia.numero AS Provincia_numero                           	-- 6
		,Provincia.nombre AS Provincia_nombre                           	-- 7
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 8
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 9
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 10
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 11
		,Pais.id AS Pais_id                                             	-- 12
		,Pais.numero AS Pais_numero                                     	-- 13
		,Pais.nombre AS Pais_nombre                                     	-- 14
		,Pais.abreviatura AS Pais_abreviatura                           	-- 15

	FROM	massoftware.Ciudad
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 5
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Ciudad.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Ciudad.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Ciudad.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (provinciaArg7 IS NULL OR (CHAR_LENGTH(TRIM(provinciaArg7)) > 0 AND Ciudad.provincia = TRIM(provinciaArg7)::VARCHAR))

	ORDER BY Ciudad.provincia DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Ciudad_des_Ciudad_Provincia_2(
		 null::INTEGER -- Ciudad_numeroFromArg0
		, null::INTEGER -- Ciudad_numeroToArg1
		, null::VARCHAR -- Ciudad_nombreWord0Arg2
		, null::VARCHAR -- Ciudad_nombreWord1Arg3
		, null::VARCHAR -- Ciudad_nombreWord2Arg4
		, null::VARCHAR -- Ciudad_nombreWord3Arg5
		, null::VARCHAR -- Ciudad_nombreWord4Arg6
		, null::VARCHAR -- Ciudad_provinciaArg7
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: CodigoPostal                                                                                           //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.CodigoPostal

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.CodigoPostal CASCADE;

CREATE TABLE massoftware.CodigoPostal
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Código
	codigo VARCHAR(12) NOT NULL, 
	
	-- Secuencia
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT CodigoPostal_numero_chk CHECK ( numero >= 1  ), 
	
	-- Calle
	nombreCalle VARCHAR(200) NOT NULL, 
	
	-- Número calle
	numeroCalle VARCHAR(20) NOT NULL, 
	
	-- Ciudad
	ciudad VARCHAR(36)  NOT NULL  REFERENCES massoftware.Ciudad (id)
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_CodigoPostal_codigo ON massoftware.CodigoPostal (TRANSLATE(LOWER(TRIM(codigo))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatCodigoPostal() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatCodigoPostal() RETURNS TRIGGER AS $formatCodigoPostal$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.codigo := massoftware.white_is_null(NEW.codigo);
	 NEW.nombreCalle := massoftware.white_is_null(NEW.nombreCalle);
	 NEW.numeroCalle := massoftware.white_is_null(NEW.numeroCalle);
	 NEW.ciudad := massoftware.white_is_null(NEW.ciudad);

	RETURN NEW;
END;
$formatCodigoPostal$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatCodigoPostal ON massoftware.CodigoPostal CASCADE;

CREATE TRIGGER tgFormatCodigoPostal BEFORE INSERT OR UPDATE
	ON massoftware.CodigoPostal FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatCodigoPostal();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.CodigoPostal;

-- SELECT * FROM massoftware.CodigoPostal LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.CodigoPostal;

-- SELECT * FROM massoftware.CodigoPostal WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_CodigoPostalById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_CodigoPostalById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.CodigoPostal WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.CodigoPostal WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.CodigoPostal WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_CodigoPostalById('xxx');

-- SELECT * FROM massoftware.d_CodigoPostalById((SELECT CodigoPostal.id FROM massoftware.CodigoPostal LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_CodigoPostal(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(12)
		, numeroArg INTEGER
		, nombreCalleArg VARCHAR(200)
		, numeroCalleArg VARCHAR(20)
		, ciudadArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_CodigoPostal(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(12)
		, numeroArg INTEGER
		, nombreCalleArg VARCHAR(200)
		, numeroCalleArg VARCHAR(20)
		, ciudadArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.CodigoPostal(id, codigo, numero, nombreCalle, numeroCalle, ciudad) VALUES (idArg, codigoArg, numeroArg, nombreCalleArg, numeroCalleArg, ciudadArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.CodigoPostal WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_CodigoPostal(
		null::VARCHAR(36)
		, null::VARCHAR
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_CodigoPostal(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(12)
		, numeroArg INTEGER
		, nombreCalleArg VARCHAR(200)
		, numeroCalleArg VARCHAR(20)
		, ciudadArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_CodigoPostal(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(12)
		, numeroArg INTEGER
		, nombreCalleArg VARCHAR(200)
		, numeroCalleArg VARCHAR(20)
		, ciudadArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.CodigoPostal SET 
		  codigo = codigoArg
		, numero = numeroArg
		, nombreCalle = nombreCalleArg
		, numeroCalle = numeroCalleArg
		, ciudad = ciudadArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.CodigoPostal WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_CodigoPostal(
		null::VARCHAR(36)
		, null::VARCHAR
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_CodigoPostal_codigo(codigoArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_CodigoPostal_codigo(codigoArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.CodigoPostal
	WHERE	(codigoArg IS NULL OR (CHAR_LENGTH(TRIM(codigoArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(CodigoPostal.codigo)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(codigoArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_CodigoPostal_codigo(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_CodigoPostal_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_CodigoPostal_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.CodigoPostal
	WHERE	(numeroArg IS NULL OR CodigoPostal.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_CodigoPostal_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_CodigoPostal_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_CodigoPostal_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.CodigoPostal;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_CodigoPostal_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostalById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostalById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CodigoPostalById('xxx');

-- SELECT * FROM massoftware.f_CodigoPostalById((SELECT CodigoPostal.id FROM massoftware.CodigoPostal LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostalById_1(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostalById_1(idArg VARCHAR(36)) RETURNS
	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CodigoPostalById_1('xxx');

-- SELECT * FROM massoftware.f_CodigoPostalById_1((SELECT CodigoPostal.id FROM massoftware.CodigoPostal LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostalById_2(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostalById_2(idArg VARCHAR(36)) RETURNS
	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CodigoPostalById_2('xxx');

-- SELECT * FROM massoftware.f_CodigoPostalById_2((SELECT CodigoPostal.id FROM massoftware.CodigoPostal LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostalById_3(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostalById_3(idArg VARCHAR(36)) RETURNS
	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND CodigoPostal.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CodigoPostalById_3('xxx');

-- SELECT * FROM massoftware.f_CodigoPostalById_3((SELECT CodigoPostal.id FROM massoftware.CodigoPostal LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Codigo(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Codigo(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Codigo(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Codigo(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Numero(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Numero(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Numero(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Numero(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Numero(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Numero(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Numero(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Numero(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4

	FROM	massoftware.CodigoPostal

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Numero_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Numero_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Numero_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Numero_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_1(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_1(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)         	-- 0
		,CodigoPostal_codigo VARCHAR(12)     	-- 1
		,CodigoPostal_numero INTEGER         	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 4
		,Ciudad_id VARCHAR(36)               	-- 5
		,Ciudad_numero INTEGER               	-- 6
		,Ciudad_nombre VARCHAR(50)           	-- 7
		,Ciudad_departamento VARCHAR(50)     	-- 8
		,Ciudad_numeroAFIP INTEGER           	-- 9
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                 	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo         	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero         	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle	-- 4
		,Ciudad.id AS Ciudad_id                             	-- 5
		,Ciudad.numero AS Ciudad_numero                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP             	-- 9

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id	-- 5

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_1(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Numero_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Numero_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Numero_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Numero_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_2(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_2(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_2(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Codigo_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.codigo DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Codigo_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Numero_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Numero_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Numero_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Numero_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Numero_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NombreCalle_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.nombreCalle DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NombreCalle_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_NumeroCalle_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.numeroCalle DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_NumeroCalle_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_3(
		100
		, 0
		, null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_asc_CodigoPostal_Ciudad_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_3(

		  codigoArg0 VARCHAR(12)
		, numeroFromArg1 INTEGER
		, numeroToArg2 INTEGER
		, ciudadArg3 VARCHAR(36)
) RETURNS

	TABLE(
		 CodigoPostal_id VARCHAR(36)          	-- 0
		,CodigoPostal_codigo VARCHAR(12)      	-- 1
		,CodigoPostal_numero INTEGER          	-- 2
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 3
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 4
		,Ciudad_id VARCHAR(36)                	-- 5
		,Ciudad_numero INTEGER                	-- 6
		,Ciudad_nombre VARCHAR(50)            	-- 7
		,Ciudad_departamento VARCHAR(50)      	-- 8
		,Ciudad_numeroAFIP INTEGER            	-- 9
		,Provincia_id VARCHAR(36)             	-- 10
		,Provincia_numero INTEGER             	-- 11
		,Provincia_nombre VARCHAR(50)         	-- 12
		,Provincia_abreviatura VARCHAR(5)     	-- 13
		,Provincia_numeroAFIP INTEGER         	-- 14
		,Provincia_numeroIngresosBrutos INTEGER	-- 15
		,Provincia_numeroRENATEA INTEGER      	-- 16
		,Pais_id VARCHAR(36)                  	-- 17
		,Pais_numero INTEGER                  	-- 18
		,Pais_nombre VARCHAR(50)              	-- 19
		,Pais_abreviatura VARCHAR(5)          	-- 20
	) AS $$

	SELECT
		 CodigoPostal.id AS CodigoPostal_id                             	-- 0
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 1
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 2
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 3
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 4
		,Ciudad.id AS Ciudad_id                                         	-- 5
		,Ciudad.numero AS Ciudad_numero                                 	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 7
		,Ciudad.departamento AS Ciudad_departamento                     	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 9
		,Provincia.id AS Provincia_id                                   	-- 10
		,Provincia.numero AS Provincia_numero                           	-- 11
		,Provincia.nombre AS Provincia_nombre                           	-- 12
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 13
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 14
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 15
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 16
		,Pais.id AS Pais_id                                             	-- 17
		,Pais.numero AS Pais_numero                                     	-- 18
		,Pais.nombre AS Pais_nombre                                     	-- 19
		,Pais.abreviatura AS Pais_abreviatura                           	-- 20

	FROM	massoftware.CodigoPostal
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id  	-- 5
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id	-- 10
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id           	-- 17

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(CodigoPostal.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (numeroFromArg1 IS NULL OR CodigoPostal.numero >= numeroFromArg1)
		 AND (numeroToArg2 IS NULL OR CodigoPostal.numero <= numeroToArg2)
		 AND (ciudadArg3 IS NULL OR (CHAR_LENGTH(TRIM(ciudadArg3)) > 0 AND CodigoPostal.ciudad = TRIM(ciudadArg3)::VARCHAR))

	ORDER BY CodigoPostal.ciudad DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_CodigoPostal_des_CodigoPostal_Ciudad_3(
		 null::VARCHAR -- CodigoPostal_codigoArg0
		, null::INTEGER -- CodigoPostal_numeroFromArg1
		, null::INTEGER -- CodigoPostal_numeroToArg2
		, null::VARCHAR -- CodigoPostal_ciudadArg3
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: Transporte                                                                                             //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.Transporte

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.Transporte CASCADE;

CREATE TABLE massoftware.Transporte
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº transporte
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT Transporte_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- CUIT
	cuit BIGINT NOT NULL  UNIQUE  CONSTRAINT Transporte_cuit_chk CHECK ( cuit >= 1 AND cuit <= 99999999999 AND char_length(cuit::VARCHAR) >= 11 AND char_length(cuit::VARCHAR) <= 11  ), 
	
	-- Ingresos brutos
	ingresosBrutos VARCHAR(13), 
	
	-- Teléfono
	telefono VARCHAR(50), 
	
	-- Fax
	fax VARCHAR(50), 
	
	-- Código postal
	codigoPostal VARCHAR(36)  NOT NULL  REFERENCES massoftware.CodigoPostal (id), 
	
	-- Domicilio
	domicilio VARCHAR(150), 
	
	-- Comentario
	comentario VARCHAR(300)
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_Transporte_nombre ON massoftware.Transporte (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatTransporte() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatTransporte() RETURNS TRIGGER AS $formatTransporte$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);
	 NEW.ingresosBrutos := massoftware.white_is_null(NEW.ingresosBrutos);
	 NEW.telefono := massoftware.white_is_null(NEW.telefono);
	 NEW.fax := massoftware.white_is_null(NEW.fax);
	 NEW.codigoPostal := massoftware.white_is_null(NEW.codigoPostal);
	 NEW.domicilio := massoftware.white_is_null(NEW.domicilio);
	 NEW.comentario := massoftware.white_is_null(NEW.comentario);

	RETURN NEW;
END;
$formatTransporte$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatTransporte ON massoftware.Transporte CASCADE;

CREATE TRIGGER tgFormatTransporte BEFORE INSERT OR UPDATE
	ON massoftware.Transporte FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatTransporte();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.Transporte;

-- SELECT * FROM massoftware.Transporte LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.Transporte;

-- SELECT * FROM massoftware.Transporte WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_TransporteById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_TransporteById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.Transporte WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.Transporte WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Transporte WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_TransporteById('xxx');

-- SELECT * FROM massoftware.d_TransporteById((SELECT Transporte.id FROM massoftware.Transporte LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_Transporte(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, cuitArg BIGINT
		, ingresosBrutosArg VARCHAR(13)
		, telefonoArg VARCHAR(50)
		, faxArg VARCHAR(50)
		, codigoPostalArg VARCHAR(36)
		, domicilioArg VARCHAR(150)
		, comentarioArg VARCHAR(300)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_Transporte(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, cuitArg BIGINT
		, ingresosBrutosArg VARCHAR(13)
		, telefonoArg VARCHAR(50)
		, faxArg VARCHAR(50)
		, codigoPostalArg VARCHAR(36)
		, domicilioArg VARCHAR(150)
		, comentarioArg VARCHAR(300)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.Transporte(id, numero, nombre, cuit, ingresosBrutos, telefono, fax, codigoPostal, domicilio, comentario) VALUES (idArg, numeroArg, nombreArg, cuitArg, ingresosBrutosArg, telefonoArg, faxArg, codigoPostalArg, domicilioArg, comentarioArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.Transporte WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_Transporte(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::BIGINT
		, null::VARCHAR
		, null::VARCHAR
		, null::VARCHAR
		, null::VARCHAR(36)
		, null::VARCHAR
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_Transporte(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, cuitArg BIGINT
		, ingresosBrutosArg VARCHAR(13)
		, telefonoArg VARCHAR(50)
		, faxArg VARCHAR(50)
		, codigoPostalArg VARCHAR(36)
		, domicilioArg VARCHAR(150)
		, comentarioArg VARCHAR(300)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_Transporte(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, cuitArg BIGINT
		, ingresosBrutosArg VARCHAR(13)
		, telefonoArg VARCHAR(50)
		, faxArg VARCHAR(50)
		, codigoPostalArg VARCHAR(36)
		, domicilioArg VARCHAR(150)
		, comentarioArg VARCHAR(300)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.Transporte SET 
		  numero = numeroArg
		, nombre = nombreArg
		, cuit = cuitArg
		, ingresosBrutos = ingresosBrutosArg
		, telefono = telefonoArg
		, fax = faxArg
		, codigoPostal = codigoPostalArg
		, domicilio = domicilioArg
		, comentario = comentarioArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Transporte WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_Transporte(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::BIGINT
		, null::VARCHAR
		, null::VARCHAR
		, null::VARCHAR
		, null::VARCHAR(36)
		, null::VARCHAR
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Transporte_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Transporte_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Transporte
	WHERE	(numeroArg IS NULL OR Transporte.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Transporte_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Transporte_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Transporte_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Transporte
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Transporte.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Transporte_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Transporte_cuit(cuitArg BIGINT) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Transporte_cuit(cuitArg BIGINT) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Transporte
	WHERE	(cuitArg IS NULL OR Transporte.cuit = cuitArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Transporte_cuit(null::BIGINT);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Transporte_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Transporte_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.Transporte;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Transporte_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Transporte_cuit() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Transporte_cuit() RETURNS BIGINT AS $$

	SELECT (COALESCE(MAX(cuit),0) + 1)::BIGINT
	FROM	massoftware.Transporte;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Transporte_cuit();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TransporteById('xxx');

-- SELECT * FROM massoftware.f_TransporteById((SELECT Transporte.id FROM massoftware.Transporte LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteById_1(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteById_1(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TransporteById_1('xxx');

-- SELECT * FROM massoftware.f_TransporteById_1((SELECT Transporte.id FROM massoftware.Transporte LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteById_2(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteById_2(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TransporteById_2('xxx');

-- SELECT * FROM massoftware.f_TransporteById_2((SELECT Transporte.id FROM massoftware.Transporte LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteById_3(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteById_3(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Transporte.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TransporteById_3('xxx');

-- SELECT * FROM massoftware.f_TransporteById_3((SELECT Transporte.id FROM massoftware.Transporte LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Numero(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Numero(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Numero(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Numero(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Nombre(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Nombre(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Nombre(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Nombre(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Cuit(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Cuit(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Cuit(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Cuit(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Cuit(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Cuit(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Cuit(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Cuit(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Cuit(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Cuit(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Cuit(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Cuit(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_IngresosBrutos(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_IngresosBrutos(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_IngresosBrutos(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_IngresosBrutos(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_IngresosBrutos(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_IngresosBrutos(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_IngresosBrutos(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_IngresosBrutos(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_IngresosBrutos(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_IngresosBrutos(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_IngresosBrutos(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_IngresosBrutos(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Telefono(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Telefono(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Telefono(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Telefono(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Telefono(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Telefono(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Telefono(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Telefono(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Telefono(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Telefono(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Telefono(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Telefono(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Fax(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Fax(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Fax(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Fax(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Fax(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Fax(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Fax(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Fax(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Fax(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Fax(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Fax(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Fax(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_CodigoPostal(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_CodigoPostal(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_CodigoPostal(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_CodigoPostal(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_CodigoPostal(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_CodigoPostal(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_CodigoPostal(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_CodigoPostal(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_CodigoPostal(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_CodigoPostal(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_CodigoPostal(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_CodigoPostal(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Domicilio(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Domicilio(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Domicilio(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Domicilio(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Domicilio(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Domicilio(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Domicilio(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Domicilio(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Domicilio(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Domicilio(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Domicilio(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Domicilio(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Comentario(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Comentario(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Comentario(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Comentario(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Comentario(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Comentario(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Comentario(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Comentario(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Comentario(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Comentario(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Comentario(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,Transporte_domicilio VARCHAR(150)   	-- 7
		,Transporte_comentario VARCHAR(300)  	-- 8
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,Transporte.domicilio AS Transporte_domicilio         	-- 7
		,Transporte.comentario AS Transporte_comentario       	-- 8

	FROM	massoftware.Transporte

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Comentario(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Numero_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Numero_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Numero_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Numero_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Nombre_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Nombre_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Nombre_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Nombre_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Cuit_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Cuit_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Cuit_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Cuit_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Cuit_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Cuit_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Cuit_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Cuit_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Cuit_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Cuit_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Cuit_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Cuit_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_IngresosBrutos_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_IngresosBrutos_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_IngresosBrutos_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_IngresosBrutos_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_IngresosBrutos_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_IngresosBrutos_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_IngresosBrutos_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_IngresosBrutos_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_IngresosBrutos_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_IngresosBrutos_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_IngresosBrutos_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_IngresosBrutos_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Telefono_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Telefono_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Telefono_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Telefono_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Telefono_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Telefono_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Telefono_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Telefono_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Telefono_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Telefono_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Telefono_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Telefono_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Fax_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Fax_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Fax_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Fax_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Fax_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Fax_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Fax_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Fax_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Fax_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Fax_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Fax_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Fax_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_CodigoPostal_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_CodigoPostal_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_CodigoPostal_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_CodigoPostal_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_CodigoPostal_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_CodigoPostal_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_CodigoPostal_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_CodigoPostal_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_CodigoPostal_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_CodigoPostal_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_CodigoPostal_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_CodigoPostal_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Domicilio_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Domicilio_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Domicilio_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Domicilio_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Domicilio_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Domicilio_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Domicilio_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Domicilio_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Domicilio_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Domicilio_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Domicilio_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Domicilio_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Comentario_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Comentario_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Comentario_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Comentario_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Comentario_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Comentario_1(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Comentario_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Comentario_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Comentario_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Comentario_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Comentario_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Transporte_domicilio VARCHAR(150)   	-- 12
		,Transporte_comentario VARCHAR(300)  	-- 13
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Transporte.domicilio AS Transporte_domicilio         	-- 12
		,Transporte.comentario AS Transporte_comentario       	-- 13

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Comentario_1(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Numero_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Numero_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Numero_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Numero_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Nombre_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Nombre_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Nombre_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Nombre_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Cuit_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Cuit_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Cuit_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Cuit_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Cuit_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Cuit_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Cuit_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Cuit_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Cuit_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Cuit_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Cuit_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Cuit_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_IngresosBrutos_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_IngresosBrutos_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_IngresosBrutos_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_IngresosBrutos_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_IngresosBrutos_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_IngresosBrutos_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_IngresosBrutos_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_IngresosBrutos_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_IngresosBrutos_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_IngresosBrutos_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_IngresosBrutos_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_IngresosBrutos_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Telefono_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Telefono_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Telefono_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Telefono_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Telefono_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Telefono_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Telefono_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Telefono_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Telefono_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Telefono_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Telefono_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Telefono_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Fax_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Fax_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Fax_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Fax_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Fax_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Fax_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Fax_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Fax_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Fax_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Fax_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Fax_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Fax_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_CodigoPostal_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_CodigoPostal_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_CodigoPostal_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_CodigoPostal_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_CodigoPostal_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_CodigoPostal_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_CodigoPostal_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_CodigoPostal_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_CodigoPostal_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_CodigoPostal_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_CodigoPostal_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_CodigoPostal_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Domicilio_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Domicilio_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Domicilio_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Domicilio_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Domicilio_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Domicilio_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Domicilio_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Domicilio_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Domicilio_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Domicilio_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Domicilio_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Domicilio_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Comentario_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Comentario_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Comentario_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Comentario_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Comentario_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Comentario_2(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Comentario_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Comentario_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Comentario_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Comentario_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Comentario_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)           	-- 0
		,Transporte_numero INTEGER           	-- 1
		,Transporte_nombre VARCHAR(50)       	-- 2
		,Transporte_cuit BIGINT              	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)     	-- 5
		,Transporte_fax VARCHAR(50)          	-- 6
		,CodigoPostal_id VARCHAR(36)         	-- 7
		,CodigoPostal_codigo VARCHAR(12)     	-- 8
		,CodigoPostal_numero INTEGER         	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 11
		,Ciudad_id VARCHAR(36)               	-- 12
		,Ciudad_numero INTEGER               	-- 13
		,Ciudad_nombre VARCHAR(50)           	-- 14
		,Ciudad_departamento VARCHAR(50)     	-- 15
		,Ciudad_numeroAFIP INTEGER           	-- 16
		,Transporte_domicilio VARCHAR(150)   	-- 17
		,Transporte_comentario VARCHAR(300)  	-- 18
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                       	-- 0
		,Transporte.numero AS Transporte_numero               	-- 1
		,Transporte.nombre AS Transporte_nombre               	-- 2
		,Transporte.cuit AS Transporte_cuit                   	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 4
		,Transporte.telefono AS Transporte_telefono           	-- 5
		,Transporte.fax AS Transporte_fax                     	-- 6
		,CodigoPostal.id AS CodigoPostal_id                   	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 11
		,Ciudad.id AS Ciudad_id                               	-- 12
		,Ciudad.numero AS Ciudad_numero                       	-- 13
		,Ciudad.nombre AS Ciudad_nombre                       	-- 14
		,Ciudad.departamento AS Ciudad_departamento           	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 16
		,Transporte.domicilio AS Transporte_domicilio         	-- 17
		,Transporte.comentario AS Transporte_comentario       	-- 18

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Comentario_2(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Numero_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Numero_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Numero_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Numero_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Numero_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Numero_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Numero_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Numero_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Nombre_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Nombre_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Nombre_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Nombre_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Nombre_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Nombre_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Nombre_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Nombre_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Nombre_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Nombre_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Nombre_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Nombre_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Cuit_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Cuit_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Cuit_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Cuit_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Cuit_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Cuit_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Cuit_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Cuit_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Cuit_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Cuit_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Cuit_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.cuit DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Cuit_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_IngresosBrutos_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_IngresosBrutos_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_IngresosBrutos_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_IngresosBrutos_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_IngresosBrutos_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_IngresosBrutos_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_IngresosBrutos_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_IngresosBrutos_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_IngresosBrutos_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_IngresosBrutos_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_IngresosBrutos_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.ingresosBrutos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_IngresosBrutos_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Telefono_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Telefono_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Telefono_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Telefono_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Telefono_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Telefono_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Telefono_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Telefono_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Telefono_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Telefono_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Telefono_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.telefono DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Telefono_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Fax_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Fax_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Fax_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Fax_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Fax_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Fax_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Fax_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Fax_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Fax_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Fax_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Fax_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.fax DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Fax_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_CodigoPostal_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_CodigoPostal_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_CodigoPostal_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_CodigoPostal_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_CodigoPostal_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_CodigoPostal_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_CodigoPostal_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_CodigoPostal_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_CodigoPostal_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_CodigoPostal_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_CodigoPostal_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.codigoPostal DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_CodigoPostal_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Domicilio_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Domicilio_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Domicilio_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Domicilio_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Domicilio_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Domicilio_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Domicilio_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Domicilio_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Domicilio_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Domicilio_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Domicilio_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.domicilio DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Domicilio_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Comentario_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Comentario_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Comentario_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Comentario_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Comentario_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Comentario_3(
		100
		, 0
		, null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_asc_Transporte_Comentario_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_asc_Transporte_Comentario_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_asc_Transporte_Comentario_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Transporte_des_Transporte_Comentario_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Transporte_des_Transporte_Comentario_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Transporte_id VARCHAR(36)            	-- 0
		,Transporte_numero INTEGER            	-- 1
		,Transporte_nombre VARCHAR(50)        	-- 2
		,Transporte_cuit BIGINT               	-- 3
		,Transporte_ingresosBrutos VARCHAR(13)	-- 4
		,Transporte_telefono VARCHAR(50)      	-- 5
		,Transporte_fax VARCHAR(50)           	-- 6
		,CodigoPostal_id VARCHAR(36)          	-- 7
		,CodigoPostal_codigo VARCHAR(12)      	-- 8
		,CodigoPostal_numero INTEGER          	-- 9
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 10
		,CodigoPostal_numeroCalle VARCHAR(20) 	-- 11
		,Ciudad_id VARCHAR(36)                	-- 12
		,Ciudad_numero INTEGER                	-- 13
		,Ciudad_nombre VARCHAR(50)            	-- 14
		,Ciudad_departamento VARCHAR(50)      	-- 15
		,Ciudad_numeroAFIP INTEGER            	-- 16
		,Provincia_id VARCHAR(36)             	-- 17
		,Provincia_numero INTEGER             	-- 18
		,Provincia_nombre VARCHAR(50)         	-- 19
		,Provincia_abreviatura VARCHAR(5)     	-- 20
		,Provincia_numeroAFIP INTEGER         	-- 21
		,Provincia_numeroIngresosBrutos INTEGER	-- 22
		,Provincia_numeroRENATEA INTEGER      	-- 23
		,Transporte_domicilio VARCHAR(150)    	-- 24
		,Transporte_comentario VARCHAR(300)   	-- 25
	) AS $$

	SELECT
		 Transporte.id AS Transporte_id                                 	-- 0
		,Transporte.numero AS Transporte_numero                         	-- 1
		,Transporte.nombre AS Transporte_nombre                         	-- 2
		,Transporte.cuit AS Transporte_cuit                             	-- 3
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos         	-- 4
		,Transporte.telefono AS Transporte_telefono                     	-- 5
		,Transporte.fax AS Transporte_fax                               	-- 6
		,CodigoPostal.id AS CodigoPostal_id                             	-- 7
		,CodigoPostal.codigo AS CodigoPostal_codigo                     	-- 8
		,CodigoPostal.numero AS CodigoPostal_numero                     	-- 9
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle           	-- 10
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle           	-- 11
		,Ciudad.id AS Ciudad_id                                         	-- 12
		,Ciudad.numero AS Ciudad_numero                                 	-- 13
		,Ciudad.nombre AS Ciudad_nombre                                 	-- 14
		,Ciudad.departamento AS Ciudad_departamento                     	-- 15
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                         	-- 16
		,Provincia.id AS Provincia_id                                   	-- 17
		,Provincia.numero AS Provincia_numero                           	-- 18
		,Provincia.nombre AS Provincia_nombre                           	-- 19
		,Provincia.abreviatura AS Provincia_abreviatura                 	-- 20
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                   	-- 21
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos	-- 22
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA             	-- 23
		,Transporte.domicilio AS Transporte_domicilio                   	-- 24
		,Transporte.comentario AS Transporte_comentario                 	-- 25

	FROM	massoftware.Transporte
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 7
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 12
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 17

	WHERE	(numeroFromArg0 IS NULL OR Transporte.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Transporte.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Transporte.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Transporte.comentario DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Transporte_des_Transporte_Comentario_3(
		 null::INTEGER -- Transporte_numeroFromArg0
		, null::INTEGER -- Transporte_numeroToArg1
		, null::VARCHAR -- Transporte_nombreWord0Arg2
		, null::VARCHAR -- Transporte_nombreWord1Arg3
		, null::VARCHAR -- Transporte_nombreWord2Arg4
		, null::VARCHAR -- Transporte_nombreWord3Arg5
		, null::VARCHAR -- Transporte_nombreWord4Arg6
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: Carga                                                                                                  //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.Carga

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.Carga CASCADE;

CREATE TABLE massoftware.Carga
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº carga
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT Carga_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- Transporte
	transporte VARCHAR(36)  NOT NULL  REFERENCES massoftware.Transporte (id)
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_Carga_nombre ON massoftware.Carga (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatCarga() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatCarga() RETURNS TRIGGER AS $formatCarga$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);
	 NEW.transporte := massoftware.white_is_null(NEW.transporte);

	RETURN NEW;
END;
$formatCarga$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatCarga ON massoftware.Carga CASCADE;

CREATE TRIGGER tgFormatCarga BEFORE INSERT OR UPDATE
	ON massoftware.Carga FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatCarga();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.Carga;

-- SELECT * FROM massoftware.Carga LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.Carga;

-- SELECT * FROM massoftware.Carga WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_CargaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_CargaById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.Carga WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.Carga WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Carga WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_CargaById('xxx');

-- SELECT * FROM massoftware.d_CargaById((SELECT Carga.id FROM massoftware.Carga LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_Carga(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, transporteArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_Carga(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, transporteArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.Carga(id, numero, nombre, transporte) VALUES (idArg, numeroArg, nombreArg, transporteArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.Carga WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_Carga(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_Carga(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, transporteArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_Carga(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, transporteArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.Carga SET 
		  numero = numeroArg
		, nombre = nombreArg
		, transporte = transporteArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Carga WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_Carga(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Carga_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Carga_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Carga
	WHERE	(numeroArg IS NULL OR Carga.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Carga_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Carga_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Carga_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Carga
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Carga.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Carga_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Carga_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Carga_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.Carga;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Carga_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CargaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CargaById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CargaById('xxx');

-- SELECT * FROM massoftware.f_CargaById((SELECT Carga.id FROM massoftware.Carga LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CargaById_1(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CargaById_1(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CargaById_1('xxx');

-- SELECT * FROM massoftware.f_CargaById_1((SELECT Carga.id FROM massoftware.Carga LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CargaById_2(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CargaById_2(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CargaById_2('xxx');

-- SELECT * FROM massoftware.f_CargaById_2((SELECT Carga.id FROM massoftware.Carga LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_CargaById_3(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_CargaById_3(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Carga.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_CargaById_3('xxx');

-- SELECT * FROM massoftware.f_CargaById_3((SELECT Carga.id FROM massoftware.Carga LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Numero(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Numero(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Numero(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Numero(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Nombre(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Nombre(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Nombre(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Nombre(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Transporte(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Transporte(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Transporte(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Transporte(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Transporte(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Transporte(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Transporte(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Transporte(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Transporte(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Transporte(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Transporte(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)   	-- 0
		,Carga_numero INTEGER   	-- 1
		,Carga_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 Carga.id AS Carga_id       	-- 0
		,Carga.numero AS Carga_numero	-- 1
		,Carga.nombre AS Carga_nombre	-- 2

	FROM	massoftware.Carga

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Transporte(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_1(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_1(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Numero_1(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Numero_1(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Numero_1(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Numero_1(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Nombre_1(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Nombre_1(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Nombre_1(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Nombre_1(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Transporte_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Transporte_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Transporte_1(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Transporte_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Transporte_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Transporte_1(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Transporte_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Transporte_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Transporte_1(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Transporte_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Transporte_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,Transporte_domicilio VARCHAR(150)   	-- 10
		,Transporte_comentario VARCHAR(300)  	-- 11
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,Transporte.domicilio AS Transporte_domicilio         	-- 10
		,Transporte.comentario AS Transporte_comentario       	-- 11

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Transporte_1(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_2(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_2(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Numero_2(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Numero_2(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Numero_2(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Numero_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Numero_2(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Nombre_2(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Nombre_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Nombre_2(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Nombre_2(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Nombre_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Nombre_2(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Transporte_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Transporte_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Transporte_2(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Transporte_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Transporte_2(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Transporte_2(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Transporte_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Transporte_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Transporte_2(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Transporte_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Transporte_2(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Transporte_domicilio VARCHAR(150)   	-- 15
		,Transporte_comentario VARCHAR(300)  	-- 16
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Transporte.domicilio AS Transporte_domicilio         	-- 15
		,Transporte.comentario AS Transporte_comentario       	-- 16

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Transporte_2(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_3(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_3(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Numero_3(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Numero_3(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Numero_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Numero_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Numero_3(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Numero_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Numero_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Numero_3(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Nombre_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Nombre_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Nombre_3(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Nombre_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Nombre_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Nombre_3(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Nombre_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Nombre_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Nombre_3(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Nombre_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Nombre_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Nombre_3(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Transporte_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Transporte_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Transporte_3(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Transporte_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Transporte_3(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Transporte_3(
		100
		, 0
		, null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_asc_Carga_Transporte_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_asc_Carga_Transporte_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_asc_Carga_Transporte_3(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Carga_des_Carga_Transporte_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Carga_des_Carga_Transporte_3(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 Carga_id VARCHAR(36)                	-- 0
		,Carga_numero INTEGER                	-- 1
		,Carga_nombre VARCHAR(50)            	-- 2
		,Transporte_id VARCHAR(36)           	-- 3
		,Transporte_numero INTEGER           	-- 4
		,Transporte_nombre VARCHAR(50)       	-- 5
		,Transporte_cuit BIGINT              	-- 6
		,Transporte_ingresosBrutos VARCHAR(13)	-- 7
		,Transporte_telefono VARCHAR(50)     	-- 8
		,Transporte_fax VARCHAR(50)          	-- 9
		,CodigoPostal_id VARCHAR(36)         	-- 10
		,CodigoPostal_codigo VARCHAR(12)     	-- 11
		,CodigoPostal_numero INTEGER         	-- 12
		,CodigoPostal_nombreCalle VARCHAR(200)	-- 13
		,CodigoPostal_numeroCalle VARCHAR(20)	-- 14
		,Ciudad_id VARCHAR(36)               	-- 15
		,Ciudad_numero INTEGER               	-- 16
		,Ciudad_nombre VARCHAR(50)           	-- 17
		,Ciudad_departamento VARCHAR(50)     	-- 18
		,Ciudad_numeroAFIP INTEGER           	-- 19
		,Transporte_domicilio VARCHAR(150)   	-- 20
		,Transporte_comentario VARCHAR(300)  	-- 21
	) AS $$

	SELECT
		 Carga.id AS Carga_id                                 	-- 0
		,Carga.numero AS Carga_numero                         	-- 1
		,Carga.nombre AS Carga_nombre                         	-- 2
		,Transporte.id AS Transporte_id                       	-- 3
		,Transporte.numero AS Transporte_numero               	-- 4
		,Transporte.nombre AS Transporte_nombre               	-- 5
		,Transporte.cuit AS Transporte_cuit                   	-- 6
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos	-- 7
		,Transporte.telefono AS Transporte_telefono           	-- 8
		,Transporte.fax AS Transporte_fax                     	-- 9
		,CodigoPostal.id AS CodigoPostal_id                   	-- 10
		,CodigoPostal.codigo AS CodigoPostal_codigo           	-- 11
		,CodigoPostal.numero AS CodigoPostal_numero           	-- 12
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle 	-- 13
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle 	-- 14
		,Ciudad.id AS Ciudad_id                               	-- 15
		,Ciudad.numero AS Ciudad_numero                       	-- 16
		,Ciudad.nombre AS Ciudad_nombre                       	-- 17
		,Ciudad.departamento AS Ciudad_departamento           	-- 18
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP               	-- 19
		,Transporte.domicilio AS Transporte_domicilio         	-- 20
		,Transporte.comentario AS Transporte_comentario       	-- 21

	FROM	massoftware.Carga
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 3
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 10
		LEFT JOIN massoftware.Ciudad ON CodigoPostal.ciudad = Ciudad.id               	-- 15

	WHERE	(numeroFromArg0 IS NULL OR Carga.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Carga.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Carga.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY Carga.transporte DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Carga_des_Carga_Transporte_3(
		 null::INTEGER -- Carga_numeroFromArg0
		, null::INTEGER -- Carga_numeroToArg1
		, null::VARCHAR -- Carga_nombreWord0Arg2
		, null::VARCHAR -- Carga_nombreWord1Arg3
		, null::VARCHAR -- Carga_nombreWord2Arg4
		, null::VARCHAR -- Carga_nombreWord3Arg5
		, null::VARCHAR -- Carga_nombreWord4Arg6
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: TransporteTarifa                                                                                       //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.TransporteTarifa

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.TransporteTarifa CASCADE;

CREATE TABLE massoftware.TransporteTarifa
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº opción
	numero INTEGER NOT NULL  CONSTRAINT TransporteTarifa_numero_chk CHECK ( numero >= 1  ), 
	
	-- Carga
	carga VARCHAR(36)  NOT NULL  REFERENCES massoftware.Carga (id), 
	
	-- Ciudad
	ciudad VARCHAR(36)  NOT NULL  REFERENCES massoftware.Ciudad (id), 
	
	-- Precio flete
	precioFlete DECIMAL(13, 5) NOT NULL  CONSTRAINT TransporteTarifa_precioFlete_chk CHECK ( precioFlete >= -9999.9999 AND precioFlete <= 99999.9999  ), 
	
	-- Precio unidad facturación
	precioUnidadFacturacion DECIMAL(13, 5) NOT NULL  CONSTRAINT TransporteTarifa_precioUnidadFacturacion_chk CHECK ( precioUnidadFacturacion >= -9999.9999 AND precioUnidadFacturacion <= 99999.9999  ), 
	
	-- Precio unidad stock
	precioUnidadStock DECIMAL(13, 5) NOT NULL  CONSTRAINT TransporteTarifa_precioUnidadStock_chk CHECK ( precioUnidadStock >= -9999.9999 AND precioUnidadStock <= 99999.9999  ), 
	
	-- Precio bultos
	precioBultos DECIMAL(13, 5) NOT NULL  CONSTRAINT TransporteTarifa_precioBultos_chk CHECK ( precioBultos >= -9999.9999 AND precioBultos <= 99999.9999  ), 
	
	-- Importe mínimo por entrega
	importeMinimoEntrega DECIMAL(13, 5) NOT NULL  CONSTRAINT TransporteTarifa_importeMinimoEntrega_chk CHECK ( importeMinimoEntrega >= -9999.9999 AND importeMinimoEntrega <= 99999.9999  ), 
	
	-- Importe mínimo por carga
	importeMinimoCarga DECIMAL(13, 5) NOT NULL  CONSTRAINT TransporteTarifa_importeMinimoCarga_chk CHECK ( importeMinimoCarga >= -9999.9999 AND importeMinimoCarga <= 99999.9999  )
);

-- ---------------------------------------------------------------------------------------------------------------------------


-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatTransporteTarifa() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatTransporteTarifa() RETURNS TRIGGER AS $formatTransporteTarifa$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.carga := massoftware.white_is_null(NEW.carga);
	 NEW.ciudad := massoftware.white_is_null(NEW.ciudad);

	RETURN NEW;
END;
$formatTransporteTarifa$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatTransporteTarifa ON massoftware.TransporteTarifa CASCADE;

CREATE TRIGGER tgFormatTransporteTarifa BEFORE INSERT OR UPDATE
	ON massoftware.TransporteTarifa FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatTransporteTarifa();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.TransporteTarifa;

-- SELECT * FROM massoftware.TransporteTarifa LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.TransporteTarifa;

-- SELECT * FROM massoftware.TransporteTarifa WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_TransporteTarifaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_TransporteTarifaById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.TransporteTarifa WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.TransporteTarifa WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.TransporteTarifa WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_TransporteTarifaById('xxx');

-- SELECT * FROM massoftware.d_TransporteTarifaById((SELECT TransporteTarifa.id FROM massoftware.TransporteTarifa LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_TransporteTarifa(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, cargaArg VARCHAR(36)
		, ciudadArg VARCHAR(36)
		, precioFleteArg DECIMAL
		, precioUnidadFacturacionArg DECIMAL
		, precioUnidadStockArg DECIMAL
		, precioBultosArg DECIMAL
		, importeMinimoEntregaArg DECIMAL
		, importeMinimoCargaArg DECIMAL
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_TransporteTarifa(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, cargaArg VARCHAR(36)
		, ciudadArg VARCHAR(36)
		, precioFleteArg DECIMAL
		, precioUnidadFacturacionArg DECIMAL
		, precioUnidadStockArg DECIMAL
		, precioBultosArg DECIMAL
		, importeMinimoEntregaArg DECIMAL
		, importeMinimoCargaArg DECIMAL
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	IF precioFleteArg IS NULL THEN

		precioFleteArg = 0;

	END IF;

	IF precioUnidadFacturacionArg IS NULL THEN

		precioUnidadFacturacionArg = 0;

	END IF;

	IF precioUnidadStockArg IS NULL THEN

		precioUnidadStockArg = 0;

	END IF;

	IF precioBultosArg IS NULL THEN

		precioBultosArg = 0;

	END IF;

	IF importeMinimoEntregaArg IS NULL THEN

		importeMinimoEntregaArg = 0;

	END IF;

	IF importeMinimoCargaArg IS NULL THEN

		importeMinimoCargaArg = 0;

	END IF;

	INSERT INTO massoftware.TransporteTarifa(id, numero, carga, ciudad, precioFlete, precioUnidadFacturacion, precioUnidadStock, precioBultos, importeMinimoEntrega, importeMinimoCarga) VALUES (idArg, numeroArg, cargaArg, ciudadArg, precioFleteArg, precioUnidadFacturacionArg, precioUnidadStockArg, precioBultosArg, importeMinimoEntregaArg, importeMinimoCargaArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.TransporteTarifa WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_TransporteTarifa(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR(36)
		, null::VARCHAR(36)
		, null::DECIMAL
		, null::DECIMAL
		, null::DECIMAL
		, null::DECIMAL
		, null::DECIMAL
		, null::DECIMAL
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_TransporteTarifa(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, cargaArg VARCHAR(36)
		, ciudadArg VARCHAR(36)
		, precioFleteArg DECIMAL
		, precioUnidadFacturacionArg DECIMAL
		, precioUnidadStockArg DECIMAL
		, precioBultosArg DECIMAL
		, importeMinimoEntregaArg DECIMAL
		, importeMinimoCargaArg DECIMAL
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_TransporteTarifa(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, cargaArg VARCHAR(36)
		, ciudadArg VARCHAR(36)
		, precioFleteArg DECIMAL
		, precioUnidadFacturacionArg DECIMAL
		, precioUnidadStockArg DECIMAL
		, precioBultosArg DECIMAL
		, importeMinimoEntregaArg DECIMAL
		, importeMinimoCargaArg DECIMAL
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.TransporteTarifa SET 
		  numero = numeroArg
		, carga = cargaArg
		, ciudad = ciudadArg
		, precioFlete = precioFleteArg
		, precioUnidadFacturacion = precioUnidadFacturacionArg
		, precioUnidadStock = precioUnidadStockArg
		, precioBultos = precioBultosArg
		, importeMinimoEntrega = importeMinimoEntregaArg
		, importeMinimoCarga = importeMinimoCargaArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.TransporteTarifa WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_TransporteTarifa(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR(36)
		, null::VARCHAR(36)
		, null::DECIMAL
		, null::DECIMAL
		, null::DECIMAL
		, null::DECIMAL
		, null::DECIMAL
		, null::DECIMAL
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TransporteTarifa_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TransporteTarifa_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.TransporteTarifa;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TransporteTarifa_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TransporteTarifa_precioFlete() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TransporteTarifa_precioFlete() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(precioFlete),0) + 1)::DECIMAL
	FROM	massoftware.TransporteTarifa;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TransporteTarifa_precioFlete();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TransporteTarifa_precioUnidadFacturacion() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TransporteTarifa_precioUnidadFacturacion() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(precioUnidadFacturacion),0) + 1)::DECIMAL
	FROM	massoftware.TransporteTarifa;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TransporteTarifa_precioUnidadFacturacion();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TransporteTarifa_precioUnidadStock() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TransporteTarifa_precioUnidadStock() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(precioUnidadStock),0) + 1)::DECIMAL
	FROM	massoftware.TransporteTarifa;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TransporteTarifa_precioUnidadStock();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TransporteTarifa_precioBultos() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TransporteTarifa_precioBultos() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(precioBultos),0) + 1)::DECIMAL
	FROM	massoftware.TransporteTarifa;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TransporteTarifa_precioBultos();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TransporteTarifa_importeMinimoEntrega() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TransporteTarifa_importeMinimoEntrega() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(importeMinimoEntrega),0) + 1)::DECIMAL
	FROM	massoftware.TransporteTarifa;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TransporteTarifa_importeMinimoEntrega();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TransporteTarifa_importeMinimoCarga() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TransporteTarifa_importeMinimoCarga() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(importeMinimoCarga),0) + 1)::DECIMAL
	FROM	massoftware.TransporteTarifa;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TransporteTarifa_importeMinimoCarga();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifaById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TransporteTarifaById('xxx');

-- SELECT * FROM massoftware.f_TransporteTarifaById((SELECT TransporteTarifa.id FROM massoftware.TransporteTarifa LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifaById_1(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifaById_1(idArg VARCHAR(36)) RETURNS
	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TransporteTarifaById_1('xxx');

-- SELECT * FROM massoftware.f_TransporteTarifaById_1((SELECT TransporteTarifa.id FROM massoftware.TransporteTarifa LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifaById_2(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifaById_2(idArg VARCHAR(36)) RETURNS
	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TransporteTarifaById_2('xxx');

-- SELECT * FROM massoftware.f_TransporteTarifaById_2((SELECT TransporteTarifa.id FROM massoftware.TransporteTarifa LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifaById_3(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifaById_3(idArg VARCHAR(36)) RETURNS
	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TransporteTarifa.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TransporteTarifaById_3('xxx');

-- SELECT * FROM massoftware.f_TransporteTarifaById_3((SELECT TransporteTarifa.id FROM massoftware.TransporteTarifa LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.carga ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.carga DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.carga ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.carga DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.ciudad ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.ciudad DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.ciudad ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.ciudad DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioFlete ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioFlete DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioFlete ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioFlete DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioUnidadFacturacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioUnidadFacturacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioUnidadFacturacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioUnidadFacturacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioUnidadStock ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioUnidadStock DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioUnidadStock ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioUnidadStock DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioBultos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioBultos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioBultos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.precioBultos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.importeMinimoEntrega ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.importeMinimoEntrega DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.importeMinimoEntrega ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.importeMinimoEntrega DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.importeMinimoCarga ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.importeMinimoCarga DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.importeMinimoCarga ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 2
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 3
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 4
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 5
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 6
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 7
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 2
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 3
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 4
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 5
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 6
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 7

	FROM	massoftware.TransporteTarifa

	ORDER BY TransporteTarifa.importeMinimoCarga DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.carga ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.carga DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.carga ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.carga DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.ciudad ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.ciudad DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.ciudad ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.ciudad DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioFlete ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioFlete DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioFlete ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioFlete DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioUnidadFacturacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioUnidadFacturacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioUnidadFacturacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioUnidadFacturacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioUnidadStock ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioUnidadStock DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioUnidadStock ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioUnidadStock DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioBultos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioBultos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioBultos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.precioBultos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.importeMinimoEntrega ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.importeMinimoEntrega DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.importeMinimoEntrega ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.importeMinimoEntrega DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.importeMinimoCarga ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_1(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_1(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.importeMinimoCarga DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_1(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.importeMinimoCarga ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_1(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_1(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Ciudad_id VARCHAR(36)                                 	-- 5
		,Ciudad_numero INTEGER                                 	-- 6
		,Ciudad_nombre VARCHAR(50)                             	-- 7
		,Ciudad_departamento VARCHAR(50)                       	-- 8
		,Ciudad_numeroAFIP INTEGER                             	-- 9
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 10
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 11
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 12
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 13
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 14
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 15
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Ciudad.id AS Ciudad_id                                                             	-- 5
		,Ciudad.numero AS Ciudad_numero                                                     	-- 6
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 7
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 8
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 9
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 10
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 11
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 12
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 13
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 14
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 15

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id  	-- 2
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 5

	ORDER BY TransporteTarifa.importeMinimoCarga DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_1(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.carga ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.carga DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.carga ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.carga DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.ciudad ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.ciudad DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.ciudad ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.ciudad DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioFlete ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioFlete DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioFlete ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioFlete DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioUnidadFacturacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioUnidadFacturacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioUnidadFacturacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioUnidadFacturacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioUnidadStock ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioUnidadStock DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioUnidadStock ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioUnidadStock DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioBultos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioBultos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioBultos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.precioBultos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.importeMinimoEntrega ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.importeMinimoEntrega DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.importeMinimoEntrega ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.importeMinimoEntrega DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.importeMinimoCarga ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_2(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_2(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.importeMinimoCarga DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_2(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.importeMinimoCarga ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_2(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_2(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,Transporte_domicilio VARCHAR(150)                     	-- 12
		,Transporte_comentario VARCHAR(300)                    	-- 13
		,Ciudad_id VARCHAR(36)                                 	-- 14
		,Ciudad_numero INTEGER                                 	-- 15
		,Ciudad_nombre VARCHAR(50)                             	-- 16
		,Ciudad_departamento VARCHAR(50)                       	-- 17
		,Ciudad_numeroAFIP INTEGER                             	-- 18
		,Provincia_id VARCHAR(36)                              	-- 19
		,Provincia_numero INTEGER                              	-- 20
		,Provincia_nombre VARCHAR(50)                          	-- 21
		,Provincia_abreviatura VARCHAR(5)                      	-- 22
		,Provincia_numeroAFIP INTEGER                          	-- 23
		,Provincia_numeroIngresosBrutos INTEGER                	-- 24
		,Provincia_numeroRENATEA INTEGER                       	-- 25
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 26
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 27
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 28
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 29
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 30
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 31
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 12
		,Transporte.comentario AS Transporte_comentario                                     	-- 13
		,Ciudad.id AS Ciudad_id                                                             	-- 14
		,Ciudad.numero AS Ciudad_numero                                                     	-- 15
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 16
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 17
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 18
		,Provincia.id AS Provincia_id                                                       	-- 19
		,Provincia.numero AS Provincia_numero                                               	-- 20
		,Provincia.nombre AS Provincia_nombre                                               	-- 21
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 22
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 23
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 24
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 25
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 26
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 27
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 28
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 29
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 30
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 31

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id   	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id	-- 5
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id	-- 14
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id 	-- 19

	ORDER BY TransporteTarifa.importeMinimoCarga DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_2(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Numero_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Numero_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.carga ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.carga DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.carga ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Carga_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.carga DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Carga_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.ciudad ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.ciudad DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.ciudad ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_Ciudad_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.ciudad DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_Ciudad_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioFlete ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioFlete DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioFlete ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioFlete_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioFlete DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioFlete_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioUnidadFacturacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioUnidadFacturacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioUnidadFacturacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadFacturacion_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioUnidadFacturacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadFacturacion_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioUnidadStock ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioUnidadStock DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioUnidadStock ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioUnidadStock_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioUnidadStock DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioUnidadStock_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioBultos ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioBultos DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioBultos ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_PrecioBultos_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.precioBultos DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_PrecioBultos_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.importeMinimoEntrega ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.importeMinimoEntrega DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.importeMinimoEntrega ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoEntrega_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.importeMinimoEntrega DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoEntrega_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.importeMinimoCarga ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_3(
		limitArg BIGINT
		, offsetArg BIGINT

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_3(
		limitArg BIGINT
		, offsetArg BIGINT

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.importeMinimoCarga DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_3(
		100
		, 0
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.importeMinimoCarga ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_asc_TransporteTarifa_ImporteMinimoCarga_3(
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_3(

) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_3(

) RETURNS

	TABLE(
		 TransporteTarifa_id VARCHAR(36)                       	-- 0
		,TransporteTarifa_numero INTEGER                       	-- 1
		,Carga_id VARCHAR(36)                                  	-- 2
		,Carga_numero INTEGER                                  	-- 3
		,Carga_nombre VARCHAR(50)                              	-- 4
		,Transporte_id VARCHAR(36)                             	-- 5
		,Transporte_numero INTEGER                             	-- 6
		,Transporte_nombre VARCHAR(50)                         	-- 7
		,Transporte_cuit BIGINT                                	-- 8
		,Transporte_ingresosBrutos VARCHAR(13)                 	-- 9
		,Transporte_telefono VARCHAR(50)                       	-- 10
		,Transporte_fax VARCHAR(50)                            	-- 11
		,CodigoPostal_id VARCHAR(36)                           	-- 12
		,CodigoPostal_codigo VARCHAR(12)                       	-- 13
		,CodigoPostal_numero INTEGER                           	-- 14
		,CodigoPostal_nombreCalle VARCHAR(200)                 	-- 15
		,CodigoPostal_numeroCalle VARCHAR(20)                  	-- 16
		,Transporte_domicilio VARCHAR(150)                     	-- 17
		,Transporte_comentario VARCHAR(300)                    	-- 18
		,Ciudad_id VARCHAR(36)                                 	-- 19
		,Ciudad_numero INTEGER                                 	-- 20
		,Ciudad_nombre VARCHAR(50)                             	-- 21
		,Ciudad_departamento VARCHAR(50)                       	-- 22
		,Ciudad_numeroAFIP INTEGER                             	-- 23
		,Provincia_id VARCHAR(36)                              	-- 24
		,Provincia_numero INTEGER                              	-- 25
		,Provincia_nombre VARCHAR(50)                          	-- 26
		,Provincia_abreviatura VARCHAR(5)                      	-- 27
		,Provincia_numeroAFIP INTEGER                          	-- 28
		,Provincia_numeroIngresosBrutos INTEGER                	-- 29
		,Provincia_numeroRENATEA INTEGER                       	-- 30
		,Pais_id VARCHAR(36)                                   	-- 31
		,Pais_numero INTEGER                                   	-- 32
		,Pais_nombre VARCHAR(50)                               	-- 33
		,Pais_abreviatura VARCHAR(5)                           	-- 34
		,TransporteTarifa_precioFlete DECIMAL(13, 5)           	-- 35
		,TransporteTarifa_precioUnidadFacturacion DECIMAL(13, 5)	-- 36
		,TransporteTarifa_precioUnidadStock DECIMAL(13, 5)     	-- 37
		,TransporteTarifa_precioBultos DECIMAL(13, 5)          	-- 38
		,TransporteTarifa_importeMinimoEntrega DECIMAL(13, 5)  	-- 39
		,TransporteTarifa_importeMinimoCarga DECIMAL(13, 5)    	-- 40
	) AS $$

	SELECT
		 TransporteTarifa.id AS TransporteTarifa_id                                         	-- 0
		,TransporteTarifa.numero AS TransporteTarifa_numero                                 	-- 1
		,Carga.id AS Carga_id                                                               	-- 2
		,Carga.numero AS Carga_numero                                                       	-- 3
		,Carga.nombre AS Carga_nombre                                                       	-- 4
		,Transporte.id AS Transporte_id                                                     	-- 5
		,Transporte.numero AS Transporte_numero                                             	-- 6
		,Transporte.nombre AS Transporte_nombre                                             	-- 7
		,Transporte.cuit AS Transporte_cuit                                                 	-- 8
		,Transporte.ingresosBrutos AS Transporte_ingresosBrutos                             	-- 9
		,Transporte.telefono AS Transporte_telefono                                         	-- 10
		,Transporte.fax AS Transporte_fax                                                   	-- 11
		,CodigoPostal.id AS CodigoPostal_id                                                 	-- 12
		,CodigoPostal.codigo AS CodigoPostal_codigo                                         	-- 13
		,CodigoPostal.numero AS CodigoPostal_numero                                         	-- 14
		,CodigoPostal.nombreCalle AS CodigoPostal_nombreCalle                               	-- 15
		,CodigoPostal.numeroCalle AS CodigoPostal_numeroCalle                               	-- 16
		,Transporte.domicilio AS Transporte_domicilio                                       	-- 17
		,Transporte.comentario AS Transporte_comentario                                     	-- 18
		,Ciudad.id AS Ciudad_id                                                             	-- 19
		,Ciudad.numero AS Ciudad_numero                                                     	-- 20
		,Ciudad.nombre AS Ciudad_nombre                                                     	-- 21
		,Ciudad.departamento AS Ciudad_departamento                                         	-- 22
		,Ciudad.numeroAFIP AS Ciudad_numeroAFIP                                             	-- 23
		,Provincia.id AS Provincia_id                                                       	-- 24
		,Provincia.numero AS Provincia_numero                                               	-- 25
		,Provincia.nombre AS Provincia_nombre                                               	-- 26
		,Provincia.abreviatura AS Provincia_abreviatura                                     	-- 27
		,Provincia.numeroAFIP AS Provincia_numeroAFIP                                       	-- 28
		,Provincia.numeroIngresosBrutos AS Provincia_numeroIngresosBrutos                   	-- 29
		,Provincia.numeroRENATEA AS Provincia_numeroRENATEA                                 	-- 30
		,Pais.id AS Pais_id                                                                 	-- 31
		,Pais.numero AS Pais_numero                                                         	-- 32
		,Pais.nombre AS Pais_nombre                                                         	-- 33
		,Pais.abreviatura AS Pais_abreviatura                                               	-- 34
		,TransporteTarifa.precioFlete AS TransporteTarifa_precioFlete                       	-- 35
		,TransporteTarifa.precioUnidadFacturacion AS TransporteTarifa_precioUnidadFacturacion	-- 36
		,TransporteTarifa.precioUnidadStock AS TransporteTarifa_precioUnidadStock           	-- 37
		,TransporteTarifa.precioBultos AS TransporteTarifa_precioBultos                     	-- 38
		,TransporteTarifa.importeMinimoEntrega AS TransporteTarifa_importeMinimoEntrega     	-- 39
		,TransporteTarifa.importeMinimoCarga AS TransporteTarifa_importeMinimoCarga         	-- 40

	FROM	massoftware.TransporteTarifa
		LEFT JOIN massoftware.Carga ON TransporteTarifa.carga = Carga.id              	-- 2
		LEFT JOIN massoftware.Transporte ON Carga.transporte = Transporte.id          	-- 5
		LEFT JOIN massoftware.CodigoPostal ON Transporte.codigoPostal = CodigoPostal.id	-- 12
		LEFT JOIN massoftware.Ciudad ON TransporteTarifa.ciudad = Ciudad.id           	-- 19
		LEFT JOIN massoftware.Provincia ON Ciudad.provincia = Provincia.id            	-- 24
		LEFT JOIN massoftware.Pais ON Provincia.pais = Pais.id                        	-- 31

	ORDER BY TransporteTarifa.importeMinimoCarga DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TransporteTarifa_des_TransporteTarifa_ImporteMinimoCarga_3(
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: TipoDocumentoAFIP                                                                                      //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.TipoDocumentoAFIP

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.TipoDocumentoAFIP CASCADE;

CREATE TABLE massoftware.TipoDocumentoAFIP
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº tipo
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT TipoDocumentoAFIP_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_TipoDocumentoAFIP_nombre ON massoftware.TipoDocumentoAFIP (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatTipoDocumentoAFIP() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatTipoDocumentoAFIP() RETURNS TRIGGER AS $formatTipoDocumentoAFIP$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);

	RETURN NEW;
END;
$formatTipoDocumentoAFIP$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatTipoDocumentoAFIP ON massoftware.TipoDocumentoAFIP CASCADE;

CREATE TRIGGER tgFormatTipoDocumentoAFIP BEFORE INSERT OR UPDATE
	ON massoftware.TipoDocumentoAFIP FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatTipoDocumentoAFIP();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.TipoDocumentoAFIP;

-- SELECT * FROM massoftware.TipoDocumentoAFIP LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.TipoDocumentoAFIP;

-- SELECT * FROM massoftware.TipoDocumentoAFIP WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_TipoDocumentoAFIPById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_TipoDocumentoAFIPById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.TipoDocumentoAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoDocumentoAFIP.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.TipoDocumentoAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoDocumentoAFIP.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.TipoDocumentoAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoDocumentoAFIP.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_TipoDocumentoAFIPById('xxx');

-- SELECT * FROM massoftware.d_TipoDocumentoAFIPById((SELECT TipoDocumentoAFIP.id FROM massoftware.TipoDocumentoAFIP LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_TipoDocumentoAFIP(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_TipoDocumentoAFIP(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.TipoDocumentoAFIP(id, numero, nombre) VALUES (idArg, numeroArg, nombreArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.TipoDocumentoAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoDocumentoAFIP.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_TipoDocumentoAFIP(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_TipoDocumentoAFIP(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_TipoDocumentoAFIP(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.TipoDocumentoAFIP SET 
		  numero = numeroArg
		, nombre = nombreArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoDocumentoAFIP.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.TipoDocumentoAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoDocumentoAFIP.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_TipoDocumentoAFIP(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_TipoDocumentoAFIP_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_TipoDocumentoAFIP_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.TipoDocumentoAFIP
	WHERE	(numeroArg IS NULL OR TipoDocumentoAFIP.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_TipoDocumentoAFIP_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_TipoDocumentoAFIP_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_TipoDocumentoAFIP_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.TipoDocumentoAFIP
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_TipoDocumentoAFIP_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TipoDocumentoAFIP_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TipoDocumentoAFIP_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.TipoDocumentoAFIP;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TipoDocumentoAFIP_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIPById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIPById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoDocumentoAFIP.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TipoDocumentoAFIPById('xxx');

-- SELECT * FROM massoftware.f_TipoDocumentoAFIPById((SELECT TipoDocumentoAFIP.id FROM massoftware.TipoDocumentoAFIP LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP(
		 null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP(
		100
		, 0
		, null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Numero(
		100
		, 0
		, null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Numero(
		100
		, 0
		, null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Numero(
		 null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Numero(
		 null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Nombre(
		100
		, 0
		, null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Nombre(
		100
		, 0
		, null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP_asc_TipoDocumentoAFIP_Nombre(
		 null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoDocumentoAFIP_id VARCHAR(36)   	-- 0
		,TipoDocumentoAFIP_numero INTEGER   	-- 1
		,TipoDocumentoAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoDocumentoAFIP.id AS TipoDocumentoAFIP_id       	-- 0
		,TipoDocumentoAFIP.numero AS TipoDocumentoAFIP_numero	-- 1
		,TipoDocumentoAFIP.nombre AS TipoDocumentoAFIP_nombre	-- 2

	FROM	massoftware.TipoDocumentoAFIP

	WHERE	(numeroFromArg0 IS NULL OR TipoDocumentoAFIP.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoDocumentoAFIP.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoDocumentoAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoDocumentoAFIP.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoDocumentoAFIP_des_TipoDocumentoAFIP_Nombre(
		 null::INTEGER -- TipoDocumentoAFIP_numeroFromArg0
		, null::INTEGER -- TipoDocumentoAFIP_numeroToArg1
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord0Arg2
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord1Arg3
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord2Arg4
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord3Arg5
		, null::VARCHAR -- TipoDocumentoAFIP_nombreWord4Arg6
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: MonedaAFIP                                                                                             //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.MonedaAFIP

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.MonedaAFIP CASCADE;

CREATE TABLE massoftware.MonedaAFIP
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Código
	codigo VARCHAR(3) NOT NULL, 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_MonedaAFIP_codigo ON massoftware.MonedaAFIP (TRANSLATE(LOWER(TRIM(codigo))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

CREATE UNIQUE INDEX u_MonedaAFIP_nombre ON massoftware.MonedaAFIP (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatMonedaAFIP() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatMonedaAFIP() RETURNS TRIGGER AS $formatMonedaAFIP$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.codigo := massoftware.white_is_null(NEW.codigo);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);

	RETURN NEW;
END;
$formatMonedaAFIP$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatMonedaAFIP ON massoftware.MonedaAFIP CASCADE;

CREATE TRIGGER tgFormatMonedaAFIP BEFORE INSERT OR UPDATE
	ON massoftware.MonedaAFIP FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatMonedaAFIP();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.MonedaAFIP;

-- SELECT * FROM massoftware.MonedaAFIP LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.MonedaAFIP;

-- SELECT * FROM massoftware.MonedaAFIP WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_MonedaAFIPById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_MonedaAFIPById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.MonedaAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MonedaAFIP.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.MonedaAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MonedaAFIP.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.MonedaAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MonedaAFIP.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_MonedaAFIPById('xxx');

-- SELECT * FROM massoftware.d_MonedaAFIPById((SELECT MonedaAFIP.id FROM massoftware.MonedaAFIP LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_MonedaAFIP(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(3)
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_MonedaAFIP(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(3)
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.MonedaAFIP(id, codigo, nombre) VALUES (idArg, codigoArg, nombreArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.MonedaAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MonedaAFIP.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_MonedaAFIP(
		null::VARCHAR(36)
		, null::VARCHAR
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_MonedaAFIP(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(3)
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_MonedaAFIP(
		  idArg VARCHAR(36)

		, codigoArg VARCHAR(3)
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.MonedaAFIP SET 
		  codigo = codigoArg
		, nombre = nombreArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MonedaAFIP.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.MonedaAFIP WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MonedaAFIP.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_MonedaAFIP(
		null::VARCHAR(36)
		, null::VARCHAR
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_MonedaAFIP_codigo(codigoArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_MonedaAFIP_codigo(codigoArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.MonedaAFIP
	WHERE	(codigoArg IS NULL OR (CHAR_LENGTH(TRIM(codigoArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(MonedaAFIP.codigo)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(codigoArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_MonedaAFIP_codigo(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_MonedaAFIP_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_MonedaAFIP_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.MonedaAFIP
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(MonedaAFIP.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_MonedaAFIP_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIPById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIPById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MonedaAFIP.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_MonedaAFIPById('xxx');

-- SELECT * FROM massoftware.f_MonedaAFIPById((SELECT MonedaAFIP.id FROM massoftware.MonedaAFIP LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP(
		 null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP(
		100
		, 0
		, null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP_asc_MonedaAFIP_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP_asc_MonedaAFIP_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.codigo ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP_asc_MonedaAFIP_Codigo(
		100
		, 0
		, null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP_des_MonedaAFIP_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP_des_MonedaAFIP_Codigo(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.codigo DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP_des_MonedaAFIP_Codigo(
		100
		, 0
		, null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP_asc_MonedaAFIP_Codigo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP_asc_MonedaAFIP_Codigo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.codigo ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP_asc_MonedaAFIP_Codigo(
		 null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP_des_MonedaAFIP_Codigo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP_des_MonedaAFIP_Codigo(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.codigo DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP_des_MonedaAFIP_Codigo(
		 null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP_asc_MonedaAFIP_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP_asc_MonedaAFIP_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP_asc_MonedaAFIP_Nombre(
		100
		, 0
		, null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP_des_MonedaAFIP_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP_des_MonedaAFIP_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP_des_MonedaAFIP_Nombre(
		100
		, 0
		, null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP_asc_MonedaAFIP_Nombre(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP_asc_MonedaAFIP_Nombre(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP_asc_MonedaAFIP_Nombre(
		 null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaAFIP_des_MonedaAFIP_Nombre(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaAFIP_des_MonedaAFIP_Nombre(

		  codigoArg0 VARCHAR(3)
		, nombreWord0Arg1 VARCHAR(15)
		, nombreWord1Arg2 VARCHAR(15)
		, nombreWord2Arg3 VARCHAR(15)
		, nombreWord3Arg4 VARCHAR(15)
		, nombreWord4Arg5 VARCHAR(15)
) RETURNS

	TABLE(
		 MonedaAFIP_id VARCHAR(36)   	-- 0
		,MonedaAFIP_codigo VARCHAR(3)	-- 1
		,MonedaAFIP_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MonedaAFIP.id AS MonedaAFIP_id       	-- 0
		,MonedaAFIP.codigo AS MonedaAFIP_codigo	-- 1
		,MonedaAFIP.nombre AS MonedaAFIP_nombre	-- 2

	FROM	massoftware.MonedaAFIP

	WHERE	(codigoArg0 IS NULL OR (CHAR_LENGTH(TRIM(codigoArg0)) > 0 AND TRIM(LOWER(MonedaAFIP.codigo))::VARCHAR = TRIM(LOWER(codigoArg0))::VARCHAR))
		 AND (nombreWord0Arg1 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg1)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg1)) || '%')::VARCHAR))
		 AND (nombreWord1Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg2)) || '%')::VARCHAR))
		 AND (nombreWord2Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg3)) || '%')::VARCHAR))
		 AND (nombreWord3Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg4)) || '%')::VARCHAR))
		 AND (nombreWord4Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MonedaAFIP.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg5)) || '%')::VARCHAR))

	ORDER BY MonedaAFIP.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MonedaAFIP_des_MonedaAFIP_Nombre(
		 null::VARCHAR -- MonedaAFIP_codigoArg0
		, null::VARCHAR -- MonedaAFIP_nombreWord0Arg1
		, null::VARCHAR -- MonedaAFIP_nombreWord1Arg2
		, null::VARCHAR -- MonedaAFIP_nombreWord2Arg3
		, null::VARCHAR -- MonedaAFIP_nombreWord3Arg4
		, null::VARCHAR -- MonedaAFIP_nombreWord4Arg5
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: Moneda                                                                                                 //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.Moneda

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.Moneda CASCADE;

CREATE TABLE massoftware.Moneda
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº moneda
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT Moneda_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- Abreviatura
	abreviatura VARCHAR(5) NOT NULL, 
	
	-- Cotización
	cotizacion DECIMAL(13, 5) NOT NULL  CONSTRAINT Moneda_cotizacion_chk CHECK ( cotizacion >= -9999.9999 AND cotizacion <= 99999.9999  ), 
	
	-- Fecha cotización
	cotizacionFecha TIMESTAMP NOT NULL, 
	
	-- Control de actualizacion
	controlActualizacion BOOLEAN NOT NULL, 
	
	-- Moneda AFIP
	monedaAFIP VARCHAR(36)  NOT NULL  REFERENCES massoftware.MonedaAFIP (id)
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_Moneda_nombre ON massoftware.Moneda (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

CREATE UNIQUE INDEX u_Moneda_abreviatura ON massoftware.Moneda (TRANSLATE(LOWER(TRIM(abreviatura))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatMoneda() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatMoneda() RETURNS TRIGGER AS $formatMoneda$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);
	 NEW.abreviatura := massoftware.white_is_null(NEW.abreviatura);
	 NEW.monedaAFIP := massoftware.white_is_null(NEW.monedaAFIP);

	RETURN NEW;
END;
$formatMoneda$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatMoneda ON massoftware.Moneda CASCADE;

CREATE TRIGGER tgFormatMoneda BEFORE INSERT OR UPDATE
	ON massoftware.Moneda FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatMoneda();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.Moneda;

-- SELECT * FROM massoftware.Moneda LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.Moneda;

-- SELECT * FROM massoftware.Moneda WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_MonedaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_MonedaById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.Moneda WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Moneda.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.Moneda WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Moneda.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Moneda WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Moneda.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_MonedaById('xxx');

-- SELECT * FROM massoftware.d_MonedaById((SELECT Moneda.id FROM massoftware.Moneda LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_Moneda(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
		, cotizacionArg DECIMAL
		, cotizacionFechaArg TIMESTAMP
		, controlActualizacionArg BOOLEAN
		, monedaAFIPArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_Moneda(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
		, cotizacionArg DECIMAL
		, cotizacionFechaArg TIMESTAMP
		, controlActualizacionArg BOOLEAN
		, monedaAFIPArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	IF cotizacionArg IS NULL THEN

		cotizacionArg = 1;

	END IF;

	IF cotizacionFechaArg IS NULL THEN

		cotizacionFechaArg = now();

	END IF;

	IF controlActualizacionArg IS NULL THEN

		controlActualizacionArg = false;

	END IF;

	INSERT INTO massoftware.Moneda(id, numero, nombre, abreviatura, cotizacion, cotizacionFecha, controlActualizacion, monedaAFIP) VALUES (idArg, numeroArg, nombreArg, abreviaturaArg, cotizacionArg, cotizacionFechaArg, controlActualizacionArg, monedaAFIPArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.Moneda WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Moneda.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_Moneda(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
		, null::DECIMAL
		, null::TIMESTAMP
		, null::BOOLEAN
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_Moneda(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
		, cotizacionArg DECIMAL
		, cotizacionFechaArg TIMESTAMP
		, controlActualizacionArg BOOLEAN
		, monedaAFIPArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_Moneda(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, abreviaturaArg VARCHAR(5)
		, cotizacionArg DECIMAL
		, cotizacionFechaArg TIMESTAMP
		, controlActualizacionArg BOOLEAN
		, monedaAFIPArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	IF controlActualizacionArg IS NULL THEN

		controlActualizacionArg = false;

	END IF;

	UPDATE massoftware.Moneda SET 
		  numero = numeroArg
		, nombre = nombreArg
		, abreviatura = abreviaturaArg
		, cotizacion = cotizacionArg
		, cotizacionFecha = cotizacionFechaArg
		, controlActualizacion = controlActualizacionArg
		, monedaAFIP = monedaAFIPArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Moneda.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.Moneda WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Moneda.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_Moneda(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR
		, null::DECIMAL
		, null::TIMESTAMP
		, null::BOOLEAN
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Moneda_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Moneda_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Moneda
	WHERE	(numeroArg IS NULL OR Moneda.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Moneda_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Moneda_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Moneda_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Moneda
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Moneda.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Moneda_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_Moneda_abreviatura(abreviaturaArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_Moneda_abreviatura(abreviaturaArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.Moneda
	WHERE	(abreviaturaArg IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(Moneda.abreviatura)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(abreviaturaArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_Moneda_abreviatura(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Moneda_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Moneda_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.Moneda;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Moneda_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_Moneda_cotizacion() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_Moneda_cotizacion() RETURNS DECIMAL AS $$

	SELECT (COALESCE(MAX(cotizacion),0) + 1)::DECIMAL
	FROM	massoftware.Moneda;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_Moneda_cotizacion();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Moneda.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_MonedaById('xxx');

-- SELECT * FROM massoftware.f_MonedaById((SELECT Moneda.id FROM massoftware.Moneda LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MonedaById_1(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MonedaById_1(idArg VARCHAR(36)) RETURNS
	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND Moneda.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_MonedaById_1('xxx');

-- SELECT * FROM massoftware.f_MonedaById_1((SELECT Moneda.id FROM massoftware.Moneda LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Numero(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Numero(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Numero(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Numero(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Nombre(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Nombre(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Nombre(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Nombre(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.abreviatura ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Abreviatura(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Abreviatura(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.abreviatura DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Abreviatura(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.abreviatura ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Abreviatura(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Abreviatura(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.abreviatura DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Abreviatura(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Cotizacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Cotizacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Cotizacion(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Cotizacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Cotizacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Cotizacion(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Cotizacion(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Cotizacion(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Cotizacion(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Cotizacion(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Cotizacion(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Cotizacion(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_CotizacionFecha(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_CotizacionFecha(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacionFecha ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_CotizacionFecha(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_CotizacionFecha(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_CotizacionFecha(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacionFecha DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_CotizacionFecha(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_CotizacionFecha(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_CotizacionFecha(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacionFecha ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_CotizacionFecha(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_CotizacionFecha(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_CotizacionFecha(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacionFecha DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_CotizacionFecha(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_ControlActualizacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_ControlActualizacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.controlActualizacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_ControlActualizacion(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_ControlActualizacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_ControlActualizacion(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.controlActualizacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_ControlActualizacion(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_ControlActualizacion(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_ControlActualizacion(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.controlActualizacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_ControlActualizacion(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_ControlActualizacion(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_ControlActualizacion(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.controlActualizacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_ControlActualizacion(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_MonedaAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_MonedaAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.monedaAFIP ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_MonedaAFIP(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_MonedaAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_MonedaAFIP(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.monedaAFIP DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_MonedaAFIP(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_MonedaAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_MonedaAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.monedaAFIP ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_MonedaAFIP(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_MonedaAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_MonedaAFIP(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6

	FROM	massoftware.Moneda

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.monedaAFIP DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_MonedaAFIP(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Numero_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Numero_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Numero_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Numero_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Nombre_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Nombre_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Nombre_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Nombre_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Abreviatura_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Abreviatura_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.abreviatura ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Abreviatura_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Abreviatura_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Abreviatura_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.abreviatura DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Abreviatura_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Abreviatura_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Abreviatura_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.abreviatura ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Abreviatura_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Abreviatura_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Abreviatura_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.abreviatura DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Abreviatura_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Cotizacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Cotizacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Cotizacion_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Cotizacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Cotizacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Cotizacion_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_Cotizacion_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_Cotizacion_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_Cotizacion_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_Cotizacion_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_Cotizacion_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_Cotizacion_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_CotizacionFecha_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_CotizacionFecha_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacionFecha ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_CotizacionFecha_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_CotizacionFecha_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_CotizacionFecha_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacionFecha DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_CotizacionFecha_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_CotizacionFecha_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_CotizacionFecha_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacionFecha ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_CotizacionFecha_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_CotizacionFecha_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_CotizacionFecha_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.cotizacionFecha DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_CotizacionFecha_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_ControlActualizacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_ControlActualizacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.controlActualizacion ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_ControlActualizacion_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_ControlActualizacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_ControlActualizacion_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.controlActualizacion DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_ControlActualizacion_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_ControlActualizacion_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_ControlActualizacion_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.controlActualizacion ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_ControlActualizacion_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_ControlActualizacion_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_ControlActualizacion_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.controlActualizacion DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_ControlActualizacion_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_MonedaAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_MonedaAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.monedaAFIP ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_MonedaAFIP_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_MonedaAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_MonedaAFIP_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.monedaAFIP DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_MonedaAFIP_1(
		100
		, 0
		, null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_asc_Moneda_MonedaAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_asc_Moneda_MonedaAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.monedaAFIP ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_asc_Moneda_MonedaAFIP_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_Moneda_des_Moneda_MonedaAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_Moneda_des_Moneda_MonedaAFIP_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, abreviaturaWord0Arg7 VARCHAR(15)
		, abreviaturaWord1Arg8 VARCHAR(15)
		, abreviaturaWord2Arg9 VARCHAR(15)
		, abreviaturaWord3Arg10 VARCHAR(15)
		, abreviaturaWord4Arg11 VARCHAR(15)
) RETURNS

	TABLE(
		 Moneda_id VARCHAR(36)             	-- 0
		,Moneda_numero INTEGER             	-- 1
		,Moneda_nombre VARCHAR(50)         	-- 2
		,Moneda_abreviatura VARCHAR(5)     	-- 3
		,Moneda_cotizacion DECIMAL(13, 5)  	-- 4
		,Moneda_cotizacionFecha TIMESTAMP  	-- 5
		,Moneda_controlActualizacion BOOLEAN	-- 6
		,MonedaAFIP_id VARCHAR(36)         	-- 7
		,MonedaAFIP_codigo VARCHAR(3)      	-- 8
		,MonedaAFIP_nombre VARCHAR(50)     	-- 9
	) AS $$

	SELECT
		 Moneda.id AS Moneda_id                                   	-- 0
		,Moneda.numero AS Moneda_numero                           	-- 1
		,Moneda.nombre AS Moneda_nombre                           	-- 2
		,Moneda.abreviatura AS Moneda_abreviatura                 	-- 3
		,Moneda.cotizacion AS Moneda_cotizacion                   	-- 4
		,Moneda.cotizacionFecha AS Moneda_cotizacionFecha         	-- 5
		,Moneda.controlActualizacion AS Moneda_controlActualizacion	-- 6
		,MonedaAFIP.id AS MonedaAFIP_id                           	-- 7
		,MonedaAFIP.codigo AS MonedaAFIP_codigo                   	-- 8
		,MonedaAFIP.nombre AS MonedaAFIP_nombre                   	-- 9

	FROM	massoftware.Moneda
		LEFT JOIN massoftware.MonedaAFIP ON Moneda.monedaAFIP = MonedaAFIP.id	-- 7

	WHERE	(numeroFromArg0 IS NULL OR Moneda.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR Moneda.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (abreviaturaWord0Arg7 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord0Arg7)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord0Arg7)) || '%')::VARCHAR))
		 AND (abreviaturaWord1Arg8 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord1Arg8)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord1Arg8)) || '%')::VARCHAR))
		 AND (abreviaturaWord2Arg9 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord2Arg9)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord2Arg9)) || '%')::VARCHAR))
		 AND (abreviaturaWord3Arg10 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord3Arg10)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord3Arg10)) || '%')::VARCHAR))
		 AND (abreviaturaWord4Arg11 IS NULL OR (CHAR_LENGTH(TRIM(abreviaturaWord4Arg11)) > 0 AND TRIM(massoftware.TRANSLATE(Moneda.abreviatura))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(abreviaturaWord4Arg11)) || '%')::VARCHAR))

	ORDER BY Moneda.monedaAFIP DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_Moneda_des_Moneda_MonedaAFIP_1(
		 null::INTEGER -- Moneda_numeroFromArg0
		, null::INTEGER -- Moneda_numeroToArg1
		, null::VARCHAR -- Moneda_nombreWord0Arg2
		, null::VARCHAR -- Moneda_nombreWord1Arg3
		, null::VARCHAR -- Moneda_nombreWord2Arg4
		, null::VARCHAR -- Moneda_nombreWord3Arg5
		, null::VARCHAR -- Moneda_nombreWord4Arg6
		, null::VARCHAR -- Moneda_abreviaturaWord0Arg7
		, null::VARCHAR -- Moneda_abreviaturaWord1Arg8
		, null::VARCHAR -- Moneda_abreviaturaWord2Arg9
		, null::VARCHAR -- Moneda_abreviaturaWord3Arg10
		, null::VARCHAR -- Moneda_abreviaturaWord4Arg11
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: NotaCreditoMotivo                                                                                      //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.NotaCreditoMotivo

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.NotaCreditoMotivo CASCADE;

CREATE TABLE massoftware.NotaCreditoMotivo
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº motivo
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT NotaCreditoMotivo_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_NotaCreditoMotivo_nombre ON massoftware.NotaCreditoMotivo (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatNotaCreditoMotivo() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatNotaCreditoMotivo() RETURNS TRIGGER AS $formatNotaCreditoMotivo$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);

	RETURN NEW;
END;
$formatNotaCreditoMotivo$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatNotaCreditoMotivo ON massoftware.NotaCreditoMotivo CASCADE;

CREATE TRIGGER tgFormatNotaCreditoMotivo BEFORE INSERT OR UPDATE
	ON massoftware.NotaCreditoMotivo FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatNotaCreditoMotivo();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.NotaCreditoMotivo;

-- SELECT * FROM massoftware.NotaCreditoMotivo LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.NotaCreditoMotivo;

-- SELECT * FROM massoftware.NotaCreditoMotivo WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_NotaCreditoMotivoById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_NotaCreditoMotivoById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.NotaCreditoMotivo WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND NotaCreditoMotivo.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.NotaCreditoMotivo WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND NotaCreditoMotivo.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.NotaCreditoMotivo WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND NotaCreditoMotivo.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_NotaCreditoMotivoById('xxx');

-- SELECT * FROM massoftware.d_NotaCreditoMotivoById((SELECT NotaCreditoMotivo.id FROM massoftware.NotaCreditoMotivo LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_NotaCreditoMotivo(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_NotaCreditoMotivo(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.NotaCreditoMotivo(id, numero, nombre) VALUES (idArg, numeroArg, nombreArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.NotaCreditoMotivo WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND NotaCreditoMotivo.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_NotaCreditoMotivo(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_NotaCreditoMotivo(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_NotaCreditoMotivo(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.NotaCreditoMotivo SET 
		  numero = numeroArg
		, nombre = nombreArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND NotaCreditoMotivo.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.NotaCreditoMotivo WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND NotaCreditoMotivo.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_NotaCreditoMotivo(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_NotaCreditoMotivo_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_NotaCreditoMotivo_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.NotaCreditoMotivo
	WHERE	(numeroArg IS NULL OR NotaCreditoMotivo.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_NotaCreditoMotivo_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_NotaCreditoMotivo_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_NotaCreditoMotivo_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.NotaCreditoMotivo
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(NotaCreditoMotivo.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_NotaCreditoMotivo_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_NotaCreditoMotivo_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_NotaCreditoMotivo_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.NotaCreditoMotivo;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_NotaCreditoMotivo_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivoById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivoById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND NotaCreditoMotivo.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_NotaCreditoMotivoById('xxx');

-- SELECT * FROM massoftware.f_NotaCreditoMotivoById((SELECT NotaCreditoMotivo.id FROM massoftware.NotaCreditoMotivo LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo(
		 null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo(
		100
		, 0
		, null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Numero(
		100
		, 0
		, null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Numero(
		100
		, 0
		, null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Numero(
		 null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Numero(
		 null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Nombre(
		100
		, 0
		, null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Nombre(
		100
		, 0
		, null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo_asc_NotaCreditoMotivo_Nombre(
		 null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 NotaCreditoMotivo_id VARCHAR(36)   	-- 0
		,NotaCreditoMotivo_numero INTEGER   	-- 1
		,NotaCreditoMotivo_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 NotaCreditoMotivo.id AS NotaCreditoMotivo_id       	-- 0
		,NotaCreditoMotivo.numero AS NotaCreditoMotivo_numero	-- 1
		,NotaCreditoMotivo.nombre AS NotaCreditoMotivo_nombre	-- 2

	FROM	massoftware.NotaCreditoMotivo

	WHERE	(numeroFromArg0 IS NULL OR NotaCreditoMotivo.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR NotaCreditoMotivo.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(NotaCreditoMotivo.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY NotaCreditoMotivo.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_NotaCreditoMotivo_des_NotaCreditoMotivo_Nombre(
		 null::INTEGER -- NotaCreditoMotivo_numeroFromArg0
		, null::INTEGER -- NotaCreditoMotivo_numeroToArg1
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord0Arg2
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord1Arg3
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord2Arg4
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord3Arg5
		, null::VARCHAR -- NotaCreditoMotivo_nombreWord4Arg6
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: MotivoComentario                                                                                       //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.MotivoComentario

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.MotivoComentario CASCADE;

CREATE TABLE massoftware.MotivoComentario
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº motivo
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT MotivoComentario_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_MotivoComentario_nombre ON massoftware.MotivoComentario (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatMotivoComentario() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatMotivoComentario() RETURNS TRIGGER AS $formatMotivoComentario$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);

	RETURN NEW;
END;
$formatMotivoComentario$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatMotivoComentario ON massoftware.MotivoComentario CASCADE;

CREATE TRIGGER tgFormatMotivoComentario BEFORE INSERT OR UPDATE
	ON massoftware.MotivoComentario FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatMotivoComentario();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.MotivoComentario;

-- SELECT * FROM massoftware.MotivoComentario LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.MotivoComentario;

-- SELECT * FROM massoftware.MotivoComentario WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_MotivoComentarioById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_MotivoComentarioById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.MotivoComentario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoComentario.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.MotivoComentario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoComentario.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.MotivoComentario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoComentario.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_MotivoComentarioById('xxx');

-- SELECT * FROM massoftware.d_MotivoComentarioById((SELECT MotivoComentario.id FROM massoftware.MotivoComentario LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_MotivoComentario(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_MotivoComentario(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.MotivoComentario(id, numero, nombre) VALUES (idArg, numeroArg, nombreArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.MotivoComentario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoComentario.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_MotivoComentario(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_MotivoComentario(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_MotivoComentario(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.MotivoComentario SET 
		  numero = numeroArg
		, nombre = nombreArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoComentario.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.MotivoComentario WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoComentario.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_MotivoComentario(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_MotivoComentario_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_MotivoComentario_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.MotivoComentario
	WHERE	(numeroArg IS NULL OR MotivoComentario.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_MotivoComentario_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_MotivoComentario_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_MotivoComentario_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.MotivoComentario
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(MotivoComentario.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_MotivoComentario_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_MotivoComentario_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_MotivoComentario_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.MotivoComentario;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_MotivoComentario_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentarioById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentarioById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoComentario.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_MotivoComentarioById('xxx');

-- SELECT * FROM massoftware.f_MotivoComentarioById((SELECT MotivoComentario.id FROM massoftware.MotivoComentario LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario(
		 null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario(
		100
		, 0
		, null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario_asc_MotivoComentario_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario_asc_MotivoComentario_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario_asc_MotivoComentario_Numero(
		100
		, 0
		, null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario_des_MotivoComentario_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario_des_MotivoComentario_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario_des_MotivoComentario_Numero(
		100
		, 0
		, null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario_asc_MotivoComentario_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario_asc_MotivoComentario_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario_asc_MotivoComentario_Numero(
		 null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario_des_MotivoComentario_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario_des_MotivoComentario_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario_des_MotivoComentario_Numero(
		 null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario_asc_MotivoComentario_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario_asc_MotivoComentario_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario_asc_MotivoComentario_Nombre(
		100
		, 0
		, null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario_des_MotivoComentario_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario_des_MotivoComentario_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario_des_MotivoComentario_Nombre(
		100
		, 0
		, null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario_asc_MotivoComentario_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario_asc_MotivoComentario_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario_asc_MotivoComentario_Nombre(
		 null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoComentario_des_MotivoComentario_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoComentario_des_MotivoComentario_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 MotivoComentario_id VARCHAR(36)   	-- 0
		,MotivoComentario_numero INTEGER   	-- 1
		,MotivoComentario_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoComentario.id AS MotivoComentario_id       	-- 0
		,MotivoComentario.numero AS MotivoComentario_numero	-- 1
		,MotivoComentario.nombre AS MotivoComentario_nombre	-- 2

	FROM	massoftware.MotivoComentario

	WHERE	(numeroFromArg0 IS NULL OR MotivoComentario.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoComentario.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoComentario.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY MotivoComentario.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoComentario_des_MotivoComentario_Nombre(
		 null::INTEGER -- MotivoComentario_numeroFromArg0
		, null::INTEGER -- MotivoComentario_numeroToArg1
		, null::VARCHAR -- MotivoComentario_nombreWord0Arg2
		, null::VARCHAR -- MotivoComentario_nombreWord1Arg3
		, null::VARCHAR -- MotivoComentario_nombreWord2Arg4
		, null::VARCHAR -- MotivoComentario_nombreWord3Arg5
		, null::VARCHAR -- MotivoComentario_nombreWord4Arg6
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: TipoCliente                                                                                            //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.TipoCliente

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.TipoCliente CASCADE;

CREATE TABLE massoftware.TipoCliente
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº tipo de cliente
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT TipoCliente_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_TipoCliente_nombre ON massoftware.TipoCliente (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatTipoCliente() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatTipoCliente() RETURNS TRIGGER AS $formatTipoCliente$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);

	RETURN NEW;
END;
$formatTipoCliente$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatTipoCliente ON massoftware.TipoCliente CASCADE;

CREATE TRIGGER tgFormatTipoCliente BEFORE INSERT OR UPDATE
	ON massoftware.TipoCliente FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatTipoCliente();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.TipoCliente;

-- SELECT * FROM massoftware.TipoCliente LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.TipoCliente;

-- SELECT * FROM massoftware.TipoCliente WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_TipoClienteById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_TipoClienteById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.TipoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoCliente.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.TipoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoCliente.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.TipoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoCliente.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_TipoClienteById('xxx');

-- SELECT * FROM massoftware.d_TipoClienteById((SELECT TipoCliente.id FROM massoftware.TipoCliente LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_TipoCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_TipoCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.TipoCliente(id, numero, nombre) VALUES (idArg, numeroArg, nombreArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.TipoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoCliente.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_TipoCliente(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_TipoCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_TipoCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.TipoCliente SET 
		  numero = numeroArg
		, nombre = nombreArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoCliente.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.TipoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoCliente.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_TipoCliente(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_TipoCliente_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_TipoCliente_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.TipoCliente
	WHERE	(numeroArg IS NULL OR TipoCliente.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_TipoCliente_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_TipoCliente_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_TipoCliente_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.TipoCliente
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(TipoCliente.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_TipoCliente_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_TipoCliente_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_TipoCliente_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.TipoCliente;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_TipoCliente_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoClienteById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoClienteById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND TipoCliente.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_TipoClienteById('xxx');

-- SELECT * FROM massoftware.f_TipoClienteById((SELECT TipoCliente.id FROM massoftware.TipoCliente LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente(
		 null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente(
		100
		, 0
		, null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente_asc_TipoCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente_asc_TipoCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente_asc_TipoCliente_Numero(
		100
		, 0
		, null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente_des_TipoCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente_des_TipoCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente_des_TipoCliente_Numero(
		100
		, 0
		, null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente_asc_TipoCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente_asc_TipoCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente_asc_TipoCliente_Numero(
		 null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente_des_TipoCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente_des_TipoCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente_des_TipoCliente_Numero(
		 null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente_asc_TipoCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente_asc_TipoCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente_asc_TipoCliente_Nombre(
		100
		, 0
		, null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente_des_TipoCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente_des_TipoCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente_des_TipoCliente_Nombre(
		100
		, 0
		, null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente_asc_TipoCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente_asc_TipoCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente_asc_TipoCliente_Nombre(
		 null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_TipoCliente_des_TipoCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_TipoCliente_des_TipoCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 TipoCliente_id VARCHAR(36)   	-- 0
		,TipoCliente_numero INTEGER   	-- 1
		,TipoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 TipoCliente.id AS TipoCliente_id       	-- 0
		,TipoCliente.numero AS TipoCliente_numero	-- 1
		,TipoCliente.nombre AS TipoCliente_nombre	-- 2

	FROM	massoftware.TipoCliente

	WHERE	(numeroFromArg0 IS NULL OR TipoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR TipoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(TipoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY TipoCliente.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_TipoCliente_des_TipoCliente_Nombre(
		 null::INTEGER -- TipoCliente_numeroFromArg0
		, null::INTEGER -- TipoCliente_numeroToArg1
		, null::VARCHAR -- TipoCliente_nombreWord0Arg2
		, null::VARCHAR -- TipoCliente_nombreWord1Arg3
		, null::VARCHAR -- TipoCliente_nombreWord2Arg4
		, null::VARCHAR -- TipoCliente_nombreWord3Arg5
		, null::VARCHAR -- TipoCliente_nombreWord4Arg6
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: ClasificacionCliente                                                                                   //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.ClasificacionCliente

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.ClasificacionCliente CASCADE;

CREATE TABLE massoftware.ClasificacionCliente
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº clasificación
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT ClasificacionCliente_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- Color
	color INTEGER NOT NULL  CONSTRAINT ClasificacionCliente_color_chk CHECK ( color >= 1  )
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_ClasificacionCliente_nombre ON massoftware.ClasificacionCliente (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatClasificacionCliente() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatClasificacionCliente() RETURNS TRIGGER AS $formatClasificacionCliente$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);

	RETURN NEW;
END;
$formatClasificacionCliente$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatClasificacionCliente ON massoftware.ClasificacionCliente CASCADE;

CREATE TRIGGER tgFormatClasificacionCliente BEFORE INSERT OR UPDATE
	ON massoftware.ClasificacionCliente FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatClasificacionCliente();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.ClasificacionCliente;

-- SELECT * FROM massoftware.ClasificacionCliente LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.ClasificacionCliente;

-- SELECT * FROM massoftware.ClasificacionCliente WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_ClasificacionClienteById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_ClasificacionClienteById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.ClasificacionCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND ClasificacionCliente.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.ClasificacionCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND ClasificacionCliente.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.ClasificacionCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND ClasificacionCliente.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_ClasificacionClienteById('xxx');

-- SELECT * FROM massoftware.d_ClasificacionClienteById((SELECT ClasificacionCliente.id FROM massoftware.ClasificacionCliente LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_ClasificacionCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, colorArg INTEGER
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_ClasificacionCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, colorArg INTEGER
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.ClasificacionCliente(id, numero, nombre, color) VALUES (idArg, numeroArg, nombreArg, colorArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.ClasificacionCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND ClasificacionCliente.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_ClasificacionCliente(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::INTEGER
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_ClasificacionCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, colorArg INTEGER
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_ClasificacionCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, colorArg INTEGER
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.ClasificacionCliente SET 
		  numero = numeroArg
		, nombre = nombreArg
		, color = colorArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND ClasificacionCliente.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.ClasificacionCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND ClasificacionCliente.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_ClasificacionCliente(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::INTEGER
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_ClasificacionCliente_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_ClasificacionCliente_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.ClasificacionCliente
	WHERE	(numeroArg IS NULL OR ClasificacionCliente.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_ClasificacionCliente_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_ClasificacionCliente_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_ClasificacionCliente_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.ClasificacionCliente
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(ClasificacionCliente.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_ClasificacionCliente_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_ClasificacionCliente_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_ClasificacionCliente_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.ClasificacionCliente;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_ClasificacionCliente_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_ClasificacionCliente_color() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_ClasificacionCliente_color() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(color),0) + 1)::INTEGER
	FROM	massoftware.ClasificacionCliente;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_ClasificacionCliente_color();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionClienteById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionClienteById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND ClasificacionCliente.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_ClasificacionClienteById('xxx');

-- SELECT * FROM massoftware.f_ClasificacionClienteById((SELECT ClasificacionCliente.id FROM massoftware.ClasificacionCliente LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente(
		 null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente(
		100
		, 0
		, null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Numero(
		100
		, 0
		, null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Numero(
		100
		, 0
		, null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Numero(
		 null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Numero(
		 null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Nombre(
		100
		, 0
		, null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Nombre(
		100
		, 0
		, null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Nombre(
		 null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Nombre(
		 null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Color(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Color(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.color ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Color(
		100
		, 0
		, null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Color(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Color(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.color DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Color(
		100
		, 0
		, null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Color(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Color(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.color ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_asc_ClasificacionCliente_Color(
		 null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Color(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Color(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
) RETURNS

	TABLE(
		 ClasificacionCliente_id VARCHAR(36)   	-- 0
		,ClasificacionCliente_numero INTEGER   	-- 1
		,ClasificacionCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_color INTEGER    	-- 3
	) AS $$

	SELECT
		 ClasificacionCliente.id AS ClasificacionCliente_id       	-- 0
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 1
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 2
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 3

	FROM	massoftware.ClasificacionCliente

	WHERE	(numeroFromArg0 IS NULL OR ClasificacionCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR ClasificacionCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(ClasificacionCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))

	ORDER BY ClasificacionCliente.color DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_ClasificacionCliente_des_ClasificacionCliente_Color(
		 null::INTEGER -- ClasificacionCliente_numeroFromArg0
		, null::INTEGER -- ClasificacionCliente_numeroToArg1
		, null::VARCHAR -- ClasificacionCliente_nombreWord0Arg2
		, null::VARCHAR -- ClasificacionCliente_nombreWord1Arg3
		, null::VARCHAR -- ClasificacionCliente_nombreWord2Arg4
		, null::VARCHAR -- ClasificacionCliente_nombreWord3Arg5
		, null::VARCHAR -- ClasificacionCliente_nombreWord4Arg6
);

*/


-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-- //                                                                                                                        //
-- //          TABLA: MotivoBloqueoCliente                                                                                   //
-- //                                                                                                                        //
-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


-- Table: massoftware.MotivoBloqueoCliente

-- ---------------------------------------------------------------------------------------------------------------------------


DROP TABLE IF EXISTS massoftware.MotivoBloqueoCliente CASCADE;

CREATE TABLE massoftware.MotivoBloqueoCliente
(
	id VARCHAR(36) PRIMARY KEY DEFAULT uuid_generate_v4(),
	
	-- Nº motivo
	numero INTEGER NOT NULL  UNIQUE  CONSTRAINT MotivoBloqueoCliente_numero_chk CHECK ( numero >= 1  ), 
	
	-- Nombre
	nombre VARCHAR(50) NOT NULL, 
	
	-- Clasificación de cliente
	clasificacionCliente VARCHAR(36)  NOT NULL  REFERENCES massoftware.ClasificacionCliente (id)
);

-- ---------------------------------------------------------------------------------------------------------------------------


CREATE UNIQUE INDEX u_MotivoBloqueoCliente_nombre ON massoftware.MotivoBloqueoCliente (TRANSLATE(LOWER(TRIM(nombre))
	, '/\"'';,_-.âãäåāăąàáÁÂÃÄÅĀĂĄÀèééêëēĕėęěĒĔĖĘĚÉÈËÊìíîïìĩīĭÌÍÎÏÌĨĪĬóôõöōŏőòÒÓÔÕÖŌŎŐùúûüũūŭůÙÚÛÜŨŪŬŮçÇñÑ'
	, '         aaaaaaaaaAAAAAAAAAeeeeeeeeeeEEEEEEEEEiiiiiiiiIIIIIIIIooooooooOOOOOOOOuuuuuuuuUUUUUUUUcCnN' ));

-- ---------------------------------------------------------------------------------------------------------------------------

DROP FUNCTION IF EXISTS massoftware.ftgFormatMotivoBloqueoCliente() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.ftgFormatMotivoBloqueoCliente() RETURNS TRIGGER AS $formatMotivoBloqueoCliente$
DECLARE
BEGIN
	 NEW.id := massoftware.white_is_null(NEW.id);
	 NEW.nombre := massoftware.white_is_null(NEW.nombre);
	 NEW.clasificacionCliente := massoftware.white_is_null(NEW.clasificacionCliente);

	RETURN NEW;
END;
$formatMotivoBloqueoCliente$ LANGUAGE plpgsql;

-- ---------------------------------------------------------------------------------------------------------------------------

DROP TRIGGER IF EXISTS tgFormatMotivoBloqueoCliente ON massoftware.MotivoBloqueoCliente CASCADE;

CREATE TRIGGER tgFormatMotivoBloqueoCliente BEFORE INSERT OR UPDATE
	ON massoftware.MotivoBloqueoCliente FOR EACH ROW
	EXECUTE PROCEDURE massoftware.ftgFormatMotivoBloqueoCliente();

-- ---------------------------------------------------------------------------------------------------------------------------



-- SELECT COUNT(*) FROM massoftware.MotivoBloqueoCliente;

-- SELECT * FROM massoftware.MotivoBloqueoCliente LIMIT 100 OFFSET 0;

-- SELECT * FROM massoftware.MotivoBloqueoCliente;

-- SELECT * FROM massoftware.MotivoBloqueoCliente WHERE id = 'xxx';

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.d_MotivoBloqueoClienteById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.d_MotivoBloqueoClienteById(idArg VARCHAR(36)) RETURNS BOOLEAN AS $$

BEGIN

	IF ((SELECT COUNT(*) FROM massoftware.MotivoBloqueoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoBloqueoCliente.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN THEN

		RETURN false;

	END IF;

	DELETE FROM massoftware.MotivoBloqueoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoBloqueoCliente.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.MotivoBloqueoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoBloqueoCliente.id = TRIM(idArg)::VARCHAR) = 0)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

-- SELECT * FROM massoftware.d_MotivoBloqueoClienteById('xxx');

-- SELECT * FROM massoftware.d_MotivoBloqueoClienteById((SELECT MotivoBloqueoCliente.id FROM massoftware.MotivoBloqueoCliente LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.i_MotivoBloqueoCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, clasificacionClienteArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.i_MotivoBloqueoCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, clasificacionClienteArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	IF idArg IS NULL THEN

		idArg = uuid_generate_v4();

	END IF;

	INSERT INTO massoftware.MotivoBloqueoCliente(id, numero, nombre, clasificacionCliente) VALUES (idArg, numeroArg, nombreArg, clasificacionClienteArg);

	RETURN ((SELECT COUNT(*) FROM massoftware.MotivoBloqueoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoBloqueoCliente.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.i_MotivoBloqueoCliente(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.u_MotivoBloqueoCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, clasificacionClienteArg VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.u_MotivoBloqueoCliente(
		  idArg VARCHAR(36)

		, numeroArg INTEGER
		, nombreArg VARCHAR(50)
		, clasificacionClienteArg VARCHAR(36)
) RETURNS BOOLEAN AS $$

BEGIN

	UPDATE massoftware.MotivoBloqueoCliente SET 
		  numero = numeroArg
		, nombre = nombreArg
		, clasificacionCliente = clasificacionClienteArg
	WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoBloqueoCliente.id = TRIM(idArg)::VARCHAR;

	RETURN ((SELECT COUNT(*) FROM massoftware.MotivoBloqueoCliente WHERE idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoBloqueoCliente.id = TRIM(idArg)::VARCHAR) = 1)::BOOLEAN;

END;
$$ LANGUAGE plpgsql;

/*

SELECT * FROM massoftware.u_MotivoBloqueoCliente(
		null::VARCHAR(36)
		, null::INTEGER
		, null::VARCHAR
		, null::VARCHAR(36)
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_MotivoBloqueoCliente_numero(numeroArg INTEGER) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_MotivoBloqueoCliente_numero(numeroArg INTEGER) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.MotivoBloqueoCliente
	WHERE	(numeroArg IS NULL OR MotivoBloqueoCliente.numero = numeroArg);

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_MotivoBloqueoCliente_numero(null::INTEGER);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_exists_MotivoBloqueoCliente_nombre(nombreArg VARCHAR) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_exists_MotivoBloqueoCliente_nombre(nombreArg VARCHAR) RETURNS BOOLEAN  AS $$

	SELECT (COUNT(*) > 0)::BOOLEAN
	FROM	massoftware.MotivoBloqueoCliente
	WHERE	(nombreArg IS NULL OR (CHAR_LENGTH(TRIM(nombreArg)) > 0 AND TRIM(LOWER(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre)))::VARCHAR = TRIM(LOWER(massoftware.TRANSLATE(nombreArg)))::VARCHAR));

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_exists_MotivoBloqueoCliente_nombre(null::VARCHAR);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_next_MotivoBloqueoCliente_numero() CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_next_MotivoBloqueoCliente_numero() RETURNS INTEGER AS $$

	SELECT (COALESCE(MAX(numero),0) + 1)::INTEGER
	FROM	massoftware.MotivoBloqueoCliente;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_next_MotivoBloqueoCliente_numero();

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoClienteById(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoClienteById(idArg VARCHAR(36)) RETURNS
	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoBloqueoCliente.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_MotivoBloqueoClienteById('xxx');

-- SELECT * FROM massoftware.f_MotivoBloqueoClienteById((SELECT MotivoBloqueoCliente.id FROM massoftware.MotivoBloqueoCliente LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoClienteById_1(idArg VARCHAR(36)) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoClienteById_1(idArg VARCHAR(36)) RETURNS
	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE 	idArg IS NOT NULL AND CHAR_LENGTH(TRIM(idArg)) > 0 AND MotivoBloqueoCliente.id = TRIM(idArg)::VARCHAR;

$$ LANGUAGE SQL;

-- SELECT * FROM massoftware.f_MotivoBloqueoClienteById_1('xxx');

-- SELECT * FROM massoftware.f_MotivoBloqueoClienteById_1((SELECT MotivoBloqueoCliente.id FROM massoftware.MotivoBloqueoCliente LIMIT 1)::VARCHAR);

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.clasificacionCliente ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.clasificacionCliente DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.clasificacionCliente ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2

	FROM	massoftware.MotivoBloqueoCliente

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.clasificacionCliente DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.id;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_1(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.id

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_1(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.numero ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero_1(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.numero DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero_1(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.numero ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Numero_1(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.numero DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Numero_1(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.nombre ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre_1(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.nombre DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre_1(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.nombre ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_Nombre_1(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.nombre DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_Nombre_1(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.clasificacionCliente ASC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente_1(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente_1(
		limitArg BIGINT
		, offsetArg BIGINT

		, numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.clasificacionCliente DESC

	LIMIT limitArg OFFSET offsetArg;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente_1(
		100
		, 0
		, null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.clasificacionCliente ASC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_asc_MotivoBloqueoCliente_ClasificacionCliente_1(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/

-- ---------------------------------------------------------------------------------------------------------------------------


DROP FUNCTION IF EXISTS massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) CASCADE;

CREATE OR REPLACE FUNCTION massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente_1(

		  numeroFromArg0 INTEGER
		, numeroToArg1 INTEGER
		, nombreWord0Arg2 VARCHAR(15)
		, nombreWord1Arg3 VARCHAR(15)
		, nombreWord2Arg4 VARCHAR(15)
		, nombreWord3Arg5 VARCHAR(15)
		, nombreWord4Arg6 VARCHAR(15)
		, clasificacionClienteArg7 VARCHAR(36)
) RETURNS

	TABLE(
		 MotivoBloqueoCliente_id VARCHAR(36)   	-- 0
		,MotivoBloqueoCliente_numero INTEGER   	-- 1
		,MotivoBloqueoCliente_nombre VARCHAR(50)	-- 2
		,ClasificacionCliente_id VARCHAR(36)   	-- 3
		,ClasificacionCliente_numero INTEGER   	-- 4
		,ClasificacionCliente_nombre VARCHAR(50)	-- 5
		,ClasificacionCliente_color INTEGER    	-- 6
	) AS $$

	SELECT
		 MotivoBloqueoCliente.id AS MotivoBloqueoCliente_id       	-- 0
		,MotivoBloqueoCliente.numero AS MotivoBloqueoCliente_numero	-- 1
		,MotivoBloqueoCliente.nombre AS MotivoBloqueoCliente_nombre	-- 2
		,ClasificacionCliente.id AS ClasificacionCliente_id       	-- 3
		,ClasificacionCliente.numero AS ClasificacionCliente_numero	-- 4
		,ClasificacionCliente.nombre AS ClasificacionCliente_nombre	-- 5
		,ClasificacionCliente.color AS ClasificacionCliente_color 	-- 6

	FROM	massoftware.MotivoBloqueoCliente
		LEFT JOIN massoftware.ClasificacionCliente ON MotivoBloqueoCliente.clasificacionCliente = ClasificacionCliente.id	-- 3

	WHERE	(numeroFromArg0 IS NULL OR MotivoBloqueoCliente.numero >= numeroFromArg0)
		 AND (numeroToArg1 IS NULL OR MotivoBloqueoCliente.numero <= numeroToArg1)
		 AND (nombreWord0Arg2 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord0Arg2)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord0Arg2)) || '%')::VARCHAR))
		 AND (nombreWord1Arg3 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord1Arg3)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord1Arg3)) || '%')::VARCHAR))
		 AND (nombreWord2Arg4 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord2Arg4)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord2Arg4)) || '%')::VARCHAR))
		 AND (nombreWord3Arg5 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord3Arg5)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord3Arg5)) || '%')::VARCHAR))
		 AND (nombreWord4Arg6 IS NULL OR (CHAR_LENGTH(TRIM(nombreWord4Arg6)) > 0 AND TRIM(massoftware.TRANSLATE(MotivoBloqueoCliente.nombre))::VARCHAR ILIKE ('%' || TRIM(massoftware.TRANSLATE(nombreWord4Arg6)) || '%')::VARCHAR))
		 AND (clasificacionClienteArg7 IS NULL OR (CHAR_LENGTH(TRIM(clasificacionClienteArg7)) > 0 AND MotivoBloqueoCliente.clasificacionCliente = TRIM(clasificacionClienteArg7)::VARCHAR))

	ORDER BY MotivoBloqueoCliente.clasificacionCliente DESC;

$$ LANGUAGE SQL;

/*

SELECT * FROM massoftware.f_MotivoBloqueoCliente_des_MotivoBloqueoCliente_ClasificacionCliente_1(
		 null::INTEGER -- MotivoBloqueoCliente_numeroFromArg0
		, null::INTEGER -- MotivoBloqueoCliente_numeroToArg1
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord0Arg2
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord1Arg3
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord2Arg4
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord3Arg5
		, null::VARCHAR -- MotivoBloqueoCliente_nombreWord4Arg6
		, null::VARCHAR -- MotivoBloqueoCliente_clasificacionClienteArg7
);

*/